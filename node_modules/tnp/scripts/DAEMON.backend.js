"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tnp_helpers_1 = require("tnp-helpers");
var tnp_db_1 = require("tnp-db");
// TODO this will be done with background-worker-process
function DAEMON_TEST(args, exit) {
    if (exit === void 0) { exit = true; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var db, projs;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, tnp_db_1.TnpDB.Instance()];
                case 1:
                    db = _a.sent();
                    return [4 /*yield*/, db.getProjects()];
                case 2:
                    projs = _a.sent();
                    console.log(projs.map(function (c) { return c.project.name; }));
                    process.exit(0);
                    return [2 /*return*/];
            }
        });
    });
}
exports.DAEMON_TEST = DAEMON_TEST;
function DAEMON_KILL(args, exit) {
    if (exit === void 0) { exit = true; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var db;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, tnp_db_1.TnpDB.Instance()];
                case 1:
                    db = _a.sent();
                    return [4 /*yield*/, db.killWorker()];
                case 2:
                    _a.sent();
                    process.exit(0);
                    return [2 /*return*/];
            }
        });
    });
}
exports.DAEMON_KILL = DAEMON_KILL;
function KILL_DAEMON(args) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, DAEMON_KILL(args)];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}
function DAEMON_LISTEN() {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var db;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, tnp_db_1.TnpDB.Instance()];
                case 1:
                    db = _a.sent();
                    db.listenToChannel(tnp_helpers_1.Project.Current, 'tnp-copyto-add', function () { });
                    db.listenToChannel(tnp_helpers_1.Project.Current, 'tnp-copyto-remove', function () { });
                    return [2 /*return*/];
            }
        });
    });
}
exports.DAEMON_LISTEN = DAEMON_LISTEN;
function DAEMON_TRIGGER_ADD() {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var db;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, tnp_db_1.TnpDB.Instance()];
                case 1:
                    db = _a.sent();
                    return [4 /*yield*/, db.triggerChangeForProject(tnp_helpers_1.Project.Current, 'tnp-copyto-add')];
                case 2:
                    _a.sent();
                    process.exit(0);
                    return [2 /*return*/];
            }
        });
    });
}
exports.DAEMON_TRIGGER_ADD = DAEMON_TRIGGER_ADD;
function DAEMON_TRIGGER_REMOVE() {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var db;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, tnp_db_1.TnpDB.Instance()];
                case 1:
                    db = _a.sent();
                    return [4 /*yield*/, db.triggerChangeForProject(tnp_helpers_1.Project.Current, 'tnp-copyto-remove')];
                case 2:
                    _a.sent();
                    process.exit(0);
                    return [2 /*return*/];
            }
        });
    });
}
exports.DAEMON_TRIGGER_REMOVE = DAEMON_TRIGGER_REMOVE;
exports.default = {
    DAEMON_TEST: tnp_helpers_1.Helpers.CLIWRAP(DAEMON_TEST, 'DAEMON_TEST'),
    DAEMON_KILL: tnp_helpers_1.Helpers.CLIWRAP(DAEMON_KILL, 'DAEMON_KILL'),
    KILL_DAEMON: tnp_helpers_1.Helpers.CLIWRAP(KILL_DAEMON, 'KILL_DAEMON'),
    DAEMON_LISTEN: tnp_helpers_1.Helpers.CLIWRAP(DAEMON_LISTEN, 'DAEMON_LISTEN'),
    // DAEMON_TRIGGER: Helpers.CLIWRAP(DAEMON_TRIGGER, 'DAEMON_TRIGGER'),
    DAEMON_TRIGGER_ADD: tnp_helpers_1.Helpers.CLIWRAP(DAEMON_TRIGGER_ADD, 'DAEMON_TRIGGER_ADD'),
    DAEMON_TRIGGER_REMOVE: tnp_helpers_1.Helpers.CLIWRAP(DAEMON_TRIGGER_REMOVE, 'DAEMON_TRIGGER_REMOVE'),
};
//# sourceMappingURL=DAEMON.backend.js.map
import { ConfigModels } from 'tnp-config';
import { Project } from '../../project';
export declare type NewSiteOptions = {
    type?: ConfigModels.NewFactoryType;
    name?: string;
    cwd?: string;
    basedOn?: string;
    version?: ConfigModels.FrameworkVersion;
    skipInit?: boolean;
    alsoBasedOn?: string[];
    siteProjectMode?: 'strict' | 'dependency';
};
export declare class ProjectFactory {
    private static _instance;
    static get Instance(): ProjectFactory;
    private getDestinationPath;
    private errorMsgCreateProject;
    private errorMsgCreateSite;
    private pacakgeJsonFixAfterCreation;
    private fixOptions_create;
    create(options: NewSiteOptions): Promise<Project>;
    createModelFromArgs(args: string, exit: boolean, cwd: string): void;
    workspaceFromArgs(args: string, exit: boolean, cwd: string): Promise<void>;
    workspaceSiteFromArgs(args: string, exit: boolean, cwd: string, strictSiteMode?: boolean): Promise<void>;
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
//#region @backend
var tnp_core_1 = require("tnp-core");
var tnp_core_2 = require("tnp-core");
var incremental_build_process_backend_1 = require("../compilers/build-isomorphic-lib/incremental-build-process.backend");
var abstract_1 = require("../abstract");
var typescript_class_helpers_1 = require("typescript-class-helpers");
var tnp_core_3 = require("tnp-core");
var project_angular_client_1 = require("./project-angular-client");
var tnp_helpers_1 = require("tnp-helpers");
//#region @backend
var ProjectAngularLib = /** @class */ (function (_super) {
    tslib_1.__extends(ProjectAngularLib
    //#region @backend
    , _super);
    //#region @backend
    function ProjectAngularLib(location) {
        var _this = _super.call(this, location) || this;
        _this.location = location;
        if (tnp_core_3._.isString(location)) {
            _this.projectAngularClient = new project_angular_client_1.ProjectAngularClient(location);
            _this.projectAngularClient.env = _this.env; // QUICK_FIX
        }
        return _this;
    }
    //#endregion
    ProjectAngularLib.prototype.initProcedure = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var styleCss, styleScss;
            return tslib_1.__generator(this, function (_a) {
                //#region @backendFunc
                if (this.frameworkVersionAtLeast('v2') && this.isWorkspaceChildProject && !this.parent.frameworkVersionAtLeast(this._frameworkVersion)) {
                    tnp_helpers_1.Helpers.error("Please use angular-lib-" + this._frameworkVersion + " only in workspace-" + this._frameworkVersion, false, true);
                }
                if (this.frameworkVersionAtLeast('v2')) {
                    styleCss = tnp_core_2.path.join(this.location, 'src/styles.css');
                    styleScss = tnp_core_2.path.join(this.location, 'src/styles.scss');
                    if (!tnp_core_1.fse.existsSync(styleScss)) {
                        if (tnp_core_1.fse.existsSync(styleCss)) {
                            tnp_helpers_1.Helpers.copyFile(styleCss, styleScss);
                        }
                        else {
                            tnp_helpers_1.Helpers.writeFile(styleScss, " /* You can add global styles to this file, and also import other style files */");
                        }
                    }
                }
                if (this.isCoreProject && this.frameworkVersionAtLeast('v2')) {
                }
                return [2 /*return*/];
            });
        });
    };
    ProjectAngularLib.prototype.setDefaultPort = function (port) {
        //#region @backend
        this.projectAngularClient.setDefaultPort(port);
        //#endregion
    };
    ProjectAngularLib.prototype.getDefaultPort = function () {
        //#region @backendFunc
        return this.projectAngularClient.getDefaultPort();
        //#endregion
    };
    ProjectAngularLib.prototype.startOnCommand = function (args) {
        //#region @backendFunc
        var command = this.projectAngularClient.startOnCommand(args);
        // console.log(`Command is running async: ${command}`)
        return command;
        //#endregion
    };
    ProjectAngularLib.prototype.filesTemplates = function () {
        //#region @backendFunc
        var config = tslib_1.__spreadArrays([
            'tsconfig.isomorphic.json.filetemplate',
            'tsconfig.json.filetemplate'
        ], this.projectAngularClient
            .filesTemplates()
            .filter(function (f) { return !f.startsWith('webpack.config.'); }));
        if (this.frameworkVersionAtLeast('v2')) {
            config = config
                .concat(tslib_1.__spreadArrays(this.vscodeFileTemplates, [
                'angular.json.filetemplate',
                'browserslist.filetemplate',
                'ngsw-config.json.filetemplate',
                'tsconfig.app.json.filetemplate',
                'tsconfig.base.json.filetemplate',
                'src/index.html.filetemplate',
                'src/manifest.webmanifest.filetemplate'
            ]));
            config = config.filter(function (f) {
                return !['.angular-cli.json.filetemplate'].includes(f);
            });
            config = config.concat(this.projectLinkedFiles()
                .filter(function (_a) {
                var relativePath = _a.relativePath;
                return relativePath.endsWith('.filetemplate');
            })
                .map(function (_a) {
                var relativePath = _a.relativePath;
                return relativePath;
            }));
        }
        return config;
        //#endregion
    };
    ProjectAngularLib.prototype.projectLinkedFiles = function () {
        //#region @backendFunc
        var files = _super.prototype.projectLinkedFiles.call(this);
        if (this.frameworkVersionAtLeast('v2')) {
            files = files.concat([
                {
                    sourceProject: abstract_1.Project.by('isomorphic-lib', this._frameworkVersion),
                    relativePath: 'tsconfig.browser.json.filetemplate',
                },
                {
                    sourceProject: abstract_1.Project.by('isomorphic-lib', this._frameworkVersion),
                    relativePath: 'tsconfig.isomorphic.json.filetemplate'
                }
            ]);
        }
        return files;
        //#endregion
    };
    ProjectAngularLib.prototype.projectSpecyficFiles = function () {
        //#region @backendFunc
        var config = _super.prototype.projectSpecyficFiles.call(this)
            .concat(tslib_1.__spreadArrays([
            'tsconfig.browser.json',
            'karma.conf.js.filetemplate'
        ], this.filesTemplates(), [
            'src/tsconfig.packages.json'
        ])).concat(this.projectAngularClient
            .projectSpecyficFiles()
            .filter(function (f) {
            return ![
                '.angular-cli.json.filetemplate',
                'tsconfig.json',
            ].includes(f);
        })
            .filter(function (f) { return !f.startsWith('webpack.config.'); })
            .filter(function (f) {
            return f !== 'src/tsconfig.app.json';
        }));
        if (this.frameworkVersionAtLeast('v2')) {
            return config.concat([
                'src/index.html'
            ]).filter(function (f) {
                return ![
                    'src/tsconfig.packages.json',
                    'src/tsconfig.spec.json',
                    'src/tsconfig.app.json.filetemplate',
                    'src/tsconfig.app.json',
                ].includes(f);
            });
        }
        return config;
        //#endregion
    };
    ProjectAngularLib.prototype.sourceFilesToIgnore = function () {
        //#region @backendFunc
        return this.projectSpecyficFiles();
        //#endregion
    };
    ProjectAngularLib.prototype.buildLib = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var outDir;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        outDir = this.buildOptions.outDir;
                        this.beforeLibBuild(outDir);
                        this.incrementalBuildProcess = new incremental_build_process_backend_1.IncrementalBuildProcessExtended(this, this.buildOptions);
                        if (!this.buildOptions.watch) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.incrementalBuildProcess.startAndWatch("isomorphic " + this._type + " compilation (watch mode)", {
                                watchOnly: this.buildOptions.watchOnly,
                                afterInitCallBack: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                                    return tslib_1.__generator(this, function (_a) {
                                        switch (_a.label) {
                                            case 0: return [4 /*yield*/, this.compilerCache.setUpdatoDate.incrementalBuildProcess()];
                                            case 1:
                                                _a.sent();
                                                return [2 /*return*/];
                                        }
                                    });
                                }); }
                            })];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 2: return [4 /*yield*/, this.incrementalBuildProcess.start("isomorphic " + this._type + " compilation")];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    ProjectAngularLib.prototype.buildSteps = function (buildOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var appBuild, onlyWatchNoBuild;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        appBuild = buildOptions.appBuild, onlyWatchNoBuild = buildOptions.onlyWatchNoBuild;
                        if (!!onlyWatchNoBuild) return [3 /*break*/, 4];
                        if (!appBuild) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.projectAngularClient.buildSteps(buildOptions)];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 2: return [4 /*yield*/, this.buildLib()];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    ProjectAngularLib = tslib_1.__decorate([
        typescript_class_helpers_1.CLASS.NAME('ProjectAngularLib')
        //#endregion
        ,
        tslib_1.__metadata("design:paramtypes", [String])
    ], ProjectAngularLib);
    return ProjectAngularLib;
}(abstract_1.Project
//#endregion
));
exports.ProjectAngularLib = ProjectAngularLib;
//# sourceMappingURL=project-angular-lib.js.map
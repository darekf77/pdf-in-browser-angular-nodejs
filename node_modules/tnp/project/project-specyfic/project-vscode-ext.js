"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
//#region @backend
var abstract_1 = require("../abstract");
var typescript_class_helpers_1 = require("typescript-class-helpers");
var tnp_helpers_1 = require("tnp-helpers");
/**
 * DO NOT USE environment variables in this project directly
 */
//#region @backend
var ProjectVscodeExt = /** @class */ (function (_super) {
    tslib_1.__extends(ProjectVscodeExt
    //#region @backend
    , _super);
    //#endregion
    function ProjectVscodeExt() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProjectVscodeExt.prototype.buildLib = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    ProjectVscodeExt.prototype.recreateIfNotExists = function () {
        return [
            'src/config.ts',
        ];
    };
    ProjectVscodeExt.prototype.projectSpecyficFiles = function () {
        //#region @backendFunc
        return tslib_1.__spreadArrays([
            '.vscode/launch.json',
            '.vscode/tasks.json',
            '.vscodeignore',
            'vsc-extension-quickstart.md',
            'tsconfig.json',
            'update-proj.js'
        ], this.projectSpecyficFilesLinked(), this.recreateIfNotExists());
        //#endregion
    };
    ProjectVscodeExt.prototype.projectSpecyficFilesLinked = function () {
        return [
            'src/extension.ts',
            'src/helpers.ts',
            'src/models.ts',
            'src/execute-command.ts',
            'src/progress-output.ts',
        ];
    };
    ProjectVscodeExt.prototype.buildSteps = function (buildOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                //#region @backend
                try {
                    if (buildOptions.watch) {
                        this.run("npm-run tsc -p ./").sync();
                        this.run("node update-proj.js --watch").async();
                        this.run("npm-run tsc -watch -p ./").async();
                    }
                    else {
                        this.run("npm-run tsc -p ./").sync();
                        this.run("node update-proj.js").sync();
                    }
                }
                catch (error) {
                    tnp_helpers_1.Helpers.error("Not able to build extension...", false, true);
                }
                return [2 /*return*/];
            });
        });
    };
    ProjectVscodeExt.prototype.startOnCommand = function (args) {
        //#region @backendFunc
        throw new Error("Method not implemented.");
        //#endregion
    };
    ProjectVscodeExt = tslib_1.__decorate([
        typescript_class_helpers_1.CLASS.NAME('ProjectVscodeExt')
        //#endregion
    ], ProjectVscodeExt);
    return ProjectVscodeExt;
}(abstract_1.Project
//#endregion
));
exports.ProjectVscodeExt = ProjectVscodeExt;
//# sourceMappingURL=project-vscode-ext.js.map
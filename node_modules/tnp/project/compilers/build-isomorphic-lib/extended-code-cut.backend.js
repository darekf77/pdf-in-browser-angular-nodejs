"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tnp_core_1 = require("tnp-core");
var morphi_1 = require("morphi");
var browser_code_cut_backend_1 = require("./browser-code-cut.backend");
var ExtendedCodeCut = /** @class */ (function (_super) {
    tslib_1.__extends(ExtendedCodeCut, _super);
    function ExtendedCodeCut(cwd, filesPathes, options, 
    /**
     * it may be not available for global, for all compilatoin
     */
    project, compilationProject, buildOptions, sourceOutBrowser) {
        var _this = _super.call(this, cwd, filesPathes, options) || this;
        _this.cwd = cwd;
        _this.project = project;
        _this.compilationProject = compilationProject;
        _this.buildOptions = buildOptions;
        _this.sourceOutBrowser = sourceOutBrowser;
        _this.browserCodeCut = browser_code_cut_backend_1.BrowserCodeCutExtended;
        return _this;
    }
    ExtendedCodeCut.prototype.file = function (absolutePathToFile) {
        return new (this.browserCodeCut)(absolutePathToFile, this.project, this.compilationProject, this.buildOptions, this.sourceOutBrowser)
            .flatTypescriptImportExport('import')
            .flatTypescriptImportExport('export')
            .replaceRegionsForIsomorphicLib(tnp_core_1._.cloneDeep(this.options))
            .replaceRegionsFromTsImportExport('import')
            .replaceRegionsFromTsImportExport('export')
            .replaceRegionsFromJSrequire()
            .saveOrDelete();
    };
    return ExtendedCodeCut;
}(morphi_1.CodeCut));
exports.ExtendedCodeCut = ExtendedCodeCut;
//# sourceMappingURL=extended-code-cut.backend.js.map
import { Project } from '../../abstract';
import { Models } from 'tnp-models';
import { IncCompiler } from 'incremental-compiler';
import { SourceModForSite } from './source-mod-for-site.backend';
export declare function optionsSourceModifier(project: Project): IncCompiler.Models.BaseClientCompilerOptions;
export declare class SourceModifier extends SourceModForSite {
    preAsyncAction(): Promise<void>;
    private reSaveAllFilesIn;
    asyncAction(event: IncCompiler.Change): Promise<Models.other.ModifiedFiles>;
    syncAction(absoluteFilePathes: string[]): Promise<Models.other.ModifiedFiles>;
    private replikatorAction;
    process(input: string, relativePath: string): string;
    start(taskName?: string, afterInitCallBack?: () => void): Promise<IncCompiler.Base<Models.other.ModifiedFiles, Models.other.ModifiedFiles, any>>;
    startAndWatch(taskName?: string, options?: IncCompiler.Models.StartAndWatchOptions): Promise<IncCompiler.Base<Models.other.ModifiedFiles, Models.other.ModifiedFiles, any>>;
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tnp_core_1 = require("tnp-core");
var tnp_config_1 = require("tnp-config");
var incremental_compiler_1 = require("incremental-compiler");
var controllers_generator_backend_1 = require("./controllers-generator.backend");
function optionsFrameworkFileGen(project) {
    var folderPath = void 0;
    if (project.isWorkspaceChildProject && project.isGeneratingControllerEntities) {
        folderPath = tnp_core_1.path.join(project.location, tnp_config_1.config.folder.src);
    }
    var options = {
        folderPath: folderPath,
        notifyOnFileUnlink: true
    };
    return options;
}
exports.optionsFrameworkFileGen = optionsFrameworkFileGen;
var FrameworkFilesGenerator = /** @class */ (function (_super) {
    tslib_1.__extends(FrameworkFilesGenerator, _super);
    function FrameworkFilesGenerator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FrameworkFilesGenerator.prototype.asyncAction = function (event) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!!this.notAllowedToWachFiles.includes(tnp_core_1.path.basename(event.fileAbsolutePath))) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.syncAction()];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    FrameworkFilesGenerator.prototype.syncAction = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var isSiteInStrictMode, cwd;
            return tslib_1.__generator(this, function (_a) {
                if (this.project.isGeneratingControllerEntities) {
                    isSiteInStrictMode = this.project.isSiteInStrictMode;
                    cwd = tnp_core_1.path.join(this.project.location, tnp_config_1.config.folder.src);
                    this.generateEntityTs(cwd);
                    this.generateControllersTs(cwd);
                    if (isSiteInStrictMode) {
                        cwd = tnp_core_1.path.join(this.project.location, tnp_config_1.config.folder.custom, tnp_config_1.config.folder.src);
                        this.generateEntityTs(cwd, true);
                        this.generateControllersTs(cwd, true);
                    }
                }
                else {
                }
                return [2 /*return*/];
            });
        });
    };
    FrameworkFilesGenerator.prototype.start = function (taskName, afterInitCallBack) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.project.isSiteInStrictMode) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.project.baseline.frameworkFileGenerator.start(taskName)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [2 /*return*/, _super.prototype.start.call(this, taskName, afterInitCallBack)];
                }
            });
        });
    };
    FrameworkFilesGenerator.prototype.startAndWatch = function (taskName, options) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var watchOnly;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        watchOnly = (options || {}).watchOnly;
                        if (!this.project.isSiteInStrictMode) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.project.baseline.frameworkFileGenerator.startAndWatch(taskName, { watchOnly: watchOnly })];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [2 /*return*/, _super.prototype.startAndWatch.call(this, taskName, options)];
                }
            });
        });
    };
    tslib_1.__decorate([
        incremental_compiler_1.IncCompiler.methods.AsyncAction(),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [incremental_compiler_1.IncCompiler.Change]),
        tslib_1.__metadata("design:returntype", Promise)
    ], FrameworkFilesGenerator.prototype, "asyncAction", null);
    FrameworkFilesGenerator = tslib_1.__decorate([
        incremental_compiler_1.IncCompiler.Class({ className: 'FrameworkFilesGenerator' })
    ], FrameworkFilesGenerator);
    return FrameworkFilesGenerator;
}(controllers_generator_backend_1.ControllersGenerator));
exports.FrameworkFilesGenerator = FrameworkFilesGenerator;
//#endregion
//# sourceMappingURL=framework-files-generator.backend.js.map
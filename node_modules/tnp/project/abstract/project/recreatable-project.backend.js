"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tnp_core_1 = require("tnp-core");
var tnp_helpers_1 = require("tnp-helpers");
var tnp_config_1 = require("tnp-config");
var RecreatableProject = /** @class */ (function () {
    function RecreatableProject() {
    }
    Object.defineProperty(RecreatableProject.prototype, "isCoreProject", {
        /**
         * Core project with basic tested functionality
         */
        get: function () {
            var _a;
            if (tnp_helpers_1.Helpers.isBrowser) {
                return this.browser.isCoreProject;
            }
            //#region @backend
            if (this.isWorkspaceChildProject || (this.isContainerChild && this.isWorkspace)) {
                if (this.parent.packageJson.isCoreProject != this.packageJson.isCoreProject) {
                    this.packageJson.data.tnp.isCoreProject = void 0; // TODO why is that
                    this.packageJson.writeToDisc();
                }
            }
            if (this.isVscodeExtension && ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.packageJson.isCoreProject)) {
                if (this.parent.packageJson.isCoreProject != this.packageJson.isCoreProject) {
                    this.packageJson.data.tnp.isCoreProject = true;
                    this.packageJson.writeToDisc();
                }
            }
            return this.packageJson && this.packageJson.isCoreProject;
            //#endregion
        },
        enumerable: true,
        configurable: true
    });
    //#region @backend
    /**
     * Generated automaticly file templates exmpale:
     * file.ts.filetemplate -> will generate file.ts
     * inside triple bracked: {{{  ENV. }}}
     * property ENV can be used to check files
     */
    RecreatableProject.prototype.filesTemplates = function () {
        // should be abstract
        return [];
    };
    //#endregion
    //#region @backend
    RecreatableProject.prototype.projectSourceFiles = function () {
        if (this.typeIs('unknow')) {
            return [];
        }
        // should be abstract
        return tslib_1.__spreadArrays(this.filesTemplates(), (this.filesTemplates().map(function (f) { return f.replace("." + tnp_config_1.config.filesExtensions.filetemplate, ''); })), (this.projectSpecyficFiles()));
    };
    //#endregion
    //#region @backend
    RecreatableProject.prototype.projectSpecyficIgnoredFiles = function () {
        return [];
    };
    //#endregion
    //#region @backend
    RecreatableProject.prototype.sourceFilesToIgnore = function () {
        return [];
    };
    //#endregion
    //#region @backend
    RecreatableProject.prototype.initProcedure = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, void 0];
            });
        });
    };
    RecreatableProject.prototype.__initProcedure = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        tnp_helpers_1.Helpers.log("Started init procedure of project (" + this._type + ") \"" + this.genericName + "...");
                        return [4 /*yield*/, this.initProcedure()];
                    case 1:
                        _a.sent();
                        tnp_helpers_1.Helpers.log("End init procedure of project (" + this._type + ") \"" + this.genericName + "\" started...");
                        return [2 /*return*/];
                }
            });
        });
    };
    Object.defineProperty(RecreatableProject.prototype, "customizableFilesAndFolders", {
        //#endregion
        get: function () {
            var _this = this;
            if (tnp_helpers_1.Helpers.isBrowser) {
                return this.browser.customizableFilesAndFolders;
            }
            //#region @backend
            if (this.typeIs('unknow')) {
                return [];
            }
            var extraFolders = this.getFolders()
                .filter(function (f) { return !_this.children.map(function (c) { return c.name; }).includes(tnp_core_1.path.basename(f)); })
                .filter(function (f) { return !['src', 'backup'].includes(tnp_core_1.path.basename(f)); })
                .map(function (f) { return tnp_core_1.path.basename(f); });
            if (this.typeIs('workspace')) {
                return [
                    // 'environment.d.ts',
                    'environment.js',
                    'environment.dev.js',
                    'environment.prod.js',
                    'environment.test.js',
                    'environment.stage.js',
                    'environment.static.js',
                    'environment.online.js'
                ].concat(!this.isSiteInStrictMode ? extraFolders : []);
            }
            var files = ['src'];
            if (this.typeIs('angular-lib')) {
                files.push('components');
            }
            ;
            return files;
            //#endregion
        },
        enumerable: true,
        configurable: true
    });
    return RecreatableProject;
}());
exports.RecreatableProject = RecreatableProject;
// export interface RecreatableProject extends Partial<Project> { }
//# sourceMappingURL=recreatable-project.backend.js.map
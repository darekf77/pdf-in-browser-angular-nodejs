"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tnp_core_1 = require("tnp-core");
//#endregion
var tnp_helpers_1 = require("tnp-helpers");
var tnp_config_1 = require("tnp-config");
var tnp_helpers_2 = require("tnp-helpers");
var morphi_1 = require("morphi");
//#region @backend
var base_project_1 = require("./base-project");
var npm_project_1 = require("./npm-project");
var feature_project_1 = require("./feature-project");
var tnp_project_1 = require("./tnp-project");
var folder_project_1 = require("./folder-project");
var lib_project_backend_1 = require("./lib-project.backend");
var vscode_project_backend_1 = require("./vscode-project.backend");
var static_project_backend_1 = require("./static-project.backend");
var router_project_backend_1 = require("./router-project.backend");
var recreatable_project_backend_1 = require("./recreatable-project.backend");
var entity_projects_backend_1 = require("./entity-projects.backend");
var buildable_project_1 = require("./buildable-project");
var site_project_backend_1 = require("./site-project.backend");
var features_1 = require("../../features");
var compilers_1 = require("../../compilers");
var copy_manager_1 = require("../../features/copy-manager");
var db_process_project_backend_1 = require("./db-process-project.backend");
var dependency_project_backend_1 = require("./dependency-project.backend");
var compiler_cache_backend_1 = require("../../features/compiler-cache.backend");
var smart_node_modules_backend_1 = require("../../features/smart-node-modules.backend");
var recent_files_backend_1 = require("../../features/recent-files.backend");
//#endregion
var Project = /** @class */ (function (_super) {
    tslib_1.__extends(Project, _super);
    //#region @backend
    /**
     * DO NOT USE function isWorkspace, isWOrkspace child.. it is to expensive
     */
    function Project(location) {
        var _this = _super.call(this) || this;
        _this.location = tnp_core_1.crossPlatformPath(tnp_core_1._.isString(location) ? location : '');
        if (!global.codePurposeBrowser) {
            _this.defineProperty('compilerCache', compiler_cache_backend_1.CompilerCache);
            _this.cache = {};
            _this.packageJson = features_1.PackageJSON.fromProject(_this);
            _this.setType(_this.packageJson ? _this.packageJson.type : 'unknow');
            _this.defineProperty('quickFixes', features_1.QuickFixes);
            _this.defineProperty('staticBuild', features_1.StaticBuild);
            _this.defineProperty('workspaceSymlinks', features_1.WorkspaceSymlinks);
            _this.defineProperty('node_modules', features_1.NodeModules);
            _this.defineProperty('npmPackages', features_1.NpmPackages);
            _this.defineProperty('recreate', features_1.FilesRecreator);
            _this.defineProperty('filesFactory', features_1.FilesFactory);
            _this.defineProperty('sourceModifier', compilers_1.SourceModifier);
            _this.defineProperty('frameworkFileGenerator', compilers_1.FrameworkFilesGenerator);
            _this.defineProperty('filesTemplatesBuilder', features_1.FilesTemplatesBuilder);
            _this.defineProperty('join', compilers_1.BaselineSiteJoin);
            _this.defineProperty('tests', features_1.TestRunner);
            Project_1.projects.push(_this);
            _this.__defaultPort = Project_1.DefaultPortByType(_this._type);
            _this.defineProperty('env', features_1.EnvironmentConfig);
            _this.defineProperty('proxyRouter', features_1.ProxyRouter);
            _this.defineProperty('copyManager', copy_manager_1.CopyManager);
            _this.defineProperty('filesStructure', features_1.FilesStructure);
            _this.defineProperty('buildProcess', features_1.BuildProcess);
            _this.defineProperty('targetProjects', features_1.TargetProject);
            _this.defineProperty('gitActions', features_1.GitActions);
            _this.defineProperty('smartNodeModules', smart_node_modules_backend_1.SmartNodeModules);
            _this.defineProperty('recent', recent_files_backend_1.RecentFilesForContainer);
        }
        return _this;
    }
    Project_1 = Project;
    //#region @backend
    Project.linkCoreFolders = function () {
        var essentialToLink = [
            'container',
            'angular-lib',
            'isomorphic-lib',
        ];
        tnp_config_1.config.coreProjectVersions.forEach(function (v) {
            essentialToLink.forEach(function (t) {
                var continer = Project_1.by(t, v);
                continer.recreate.handleProjectSpecyficFiles();
            });
        });
    };
    Object.defineProperty(Project.prototype, "info", {
        //#endregion
        get: function () {
            if (morphi_1.Morphi.IsBrowser) {
                return this.browser.info;
            }
            //#region @backend
            return "(" + this._type + ") " + this.genericName + " ";
            //#endregion
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Project.prototype, "TnpProject", {
        get: function () {
            return Project_1.Tnp;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Project.prototype, "isBundleMode", {
        get: function () {
            return Project_1.isBundleMode;
        },
        enumerable: true,
        configurable: true
    });
    Project.prototype.removeItself = function () {
        //#region @backend
        var location = this.location;
        Project_1.projects = Project_1.projects.filter(function (p) { return p.location !== location; });
        tnp_helpers_2.Helpers.tryRemoveDir(location);
        //#endregion
    };
    var Project_1;
    Project = Project_1 = tslib_1.__decorate([
        morphi_1.Morphi.Entity({
            className: 'Project',
            classFamily: 'Project',
            classNameInBrowser: 'PROJECT',
            uniqueKeyProp: 'location',
            mapping: {
                packageJson: 'PackageJSON'
            },
            additionalMapping: {
                'browser.children': ['Project'],
                'browser.children.browser.childeren': ['Project'],
                'browser.children.browser.childeren.browser.childeren': ['Project'],
                'browser.parent': 'Project',
                'browser.parent.browser.parent': 'Project',
                'browser.baseline': 'Project',
                'browser.baseline.browser.baseline': 'Project',
                'browser.preview': 'Project',
                'browser.preview.browser.preview': 'Project',
            },
            //#region @backend
            createTable: false,
            browserTransformFn: function (entity, mdc) {
                // log('I AM TRANSFORMING ENTITY!!!', mdc)
                var exclude = [];
                if (!entity.browser) {
                    entity.browser = {};
                }
                if (!!mdc && mdc.exclude.length > 0) {
                    exclude = mdc.exclude;
                }
                // if(exclude.length > 0) {
                //   log('exclude in Project', exclude)
                // }
                if (!(exclude.length > 0 && exclude.includes('children'))) {
                    // log('SET CHILDREND')
                    entity.browser.children = entity.children;
                }
                else {
                    entity.browser.children = void 0;
                }
                if (!(exclude.length > 0 && exclude.includes('parent'))) {
                    entity.browser.parent = entity.parent;
                }
                else {
                    entity.browser.parent = void 0;
                }
                entity.browser.genericName = entity.genericName;
                entity.browser.name = entity.name;
                entity.browser.isWorkspace = entity.isWorkspace;
                entity.browser.isStandaloneProject = entity.isStandaloneProject;
                entity.browser.isContainer = entity.isContainer;
            }
            //#endregion
        }),
        tslib_1.__metadata("design:paramtypes", [String])
    ], Project);
    return Project;
}(tnp_helpers_1.Project));
exports.Project = Project;
//#endregion
//#region @backend
tnp_helpers_2.Helpers.applyMixins(Project, [
    base_project_1.BaseProject,
    npm_project_1.NpmProject,
    feature_project_1.FeatureProject,
    tnp_project_1.TnpProject,
    folder_project_1.FolderProject,
    lib_project_backend_1.LibProject,
    vscode_project_backend_1.VscodeProject,
    static_project_backend_1.StaticProject,
    router_project_backend_1.RouterProject,
    recreatable_project_backend_1.RecreatableProject,
    entity_projects_backend_1.EntityProject,
    buildable_project_1.BuildableProject,
    site_project_backend_1.SiteProject,
    db_process_project_backend_1.DbProcessProject,
    dependency_project_backend_1.DependencyProject,
    compiler_cache_backend_1.CompilerCache
]);
//#endregion
//# sourceMappingURL=project.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tnp_db_1 = require("tnp-db");
var DbProcessProject = /** @class */ (function () {
    function DbProcessProject() {
    }
    DbProcessProject.prototype.hasParentWithSingularBuild = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var db, builds;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.isWorkspaceChildProject || (this.isStandaloneProject && this.isContainerChild))) return [3 /*break*/, 3];
                        return [4 /*yield*/, tnp_db_1.TnpDB.Instance()];
                    case 1:
                        db = _a.sent();
                        return [4 /*yield*/, db.getBuildsBy({ location: this.parent.location, watch: true })];
                    case 2:
                        builds = _a.sent();
                        return [2 /*return*/, builds.length > 0];
                    case 3: return [2 /*return*/, false];
                }
            });
        });
    };
    DbProcessProject.prototype.isSingularBuild = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var db, builds;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.isWorkspace || this.isContainer)) return [3 /*break*/, 3];
                        return [4 /*yield*/, tnp_db_1.TnpDB.Instance()];
                    case 1:
                        db = _a.sent();
                        return [4 /*yield*/, db.getBuildsBy({ location: this.location, watch: true })];
                    case 2:
                        builds = _a.sent();
                        return [2 /*return*/, builds.length > 0];
                    case 3: return [2 /*return*/, false];
                }
            });
        });
    };
    return DbProcessProject;
}());
exports.DbProcessProject = DbProcessProject;
//# sourceMappingURL=db-process-project.backend.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
//#region @backend
var tnp_core_1 = require("tnp-core");
var chalk_1 = require("chalk");
var tnp_core_2 = require("tnp-core");
var tnp_core_3 = require("tnp-core");
var tnp_config_1 = require("tnp-config");
var tnp_helpers_1 = require("tnp-helpers");
function presskeys(project) {
    return " or press on keyboard: (" + chalk_1.default.bold('CMD|Ctrl') + " + " + chalk_1.default.bold('Shift') + " + " + chalk_1.default.bold('B') + ")\n  in " + chalk_1.default.bold(project.name) + " vscode window...\n";
}
exports.presskeys = presskeys;
function distRequredCondition(requiredWithBuilds, context, project, targets) {
    var _loop_1 = function (index) {
        var c = requiredWithBuilds[index];
        var targetsAreNotReady = (targets.filter(function (t) {
            return c.isReadyForTarget(t);
        }).length < targets.length);
        if (targetsAreNotReady) {
            var targetsString = targets.map(function (t) {
                return "--forClient " + t.name;
            }).join(' ');
            context.errorMessage = "\n\n      Please build project " + chalk_1.default.bold(c.name) + ":\n        " + tnp_config_1.config.frameworkName + " bdw " + targetsString + "\n\n      " + presskeys(c) + "\n\n        ";
            return { value: false };
        }
    };
    // console.log('childs', childs.map(c => c.name))
    for (var index = 0; index < requiredWithBuilds.length; index++) {
        var state_1 = _loop_1(index);
        if (typeof state_1 === "object")
            return state_1.value;
    }
    return true;
}
function waitForRequiredDistsBuilds(db, project, targets) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var conditionDist;
        var _this = this;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (project.isGenerated) {
                        return [2 /*return*/];
                    }
                    conditionDist = {
                        name: "Dist finsh buildProjectErr",
                        callback: function (context) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                            var childs;
                            return tslib_1.__generator(this, function (_a) {
                                childs = project.libsForTraget(project);
                                return [2 /*return*/, distRequredCondition(childs, context, project, targets)];
                            });
                        }); },
                        errorMessage: 'Please wait for dist build to finish... (workspace child project) '
                    };
                    return [4 /*yield*/, tnp_helpers_1.Helpers.conditionWait([
                            conditionDist,
                        ])];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}
exports.waitForRequiredDistsBuilds = waitForRequiredDistsBuilds;
function waitForAppBuildToBePossible(db, project) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var commonCondtion, browserFolder, conditionDist, conditions;
        var _this = this;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    commonCondtion = {
                        name: 'common condition',
                        callback: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                            var founded;
                            return tslib_1.__generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, db.distBuildFoundedFor(project)];
                                    case 1:
                                        founded = _a.sent();
                                        return [2 /*return*/, tnp_core_1._.isObject(founded)];
                                }
                            });
                        }); },
                        errorMessage: "Waiting for dist build for this project:\n\n    Please run: " + tnp_config_1.config.frameworkName + " bdw\n\n    inside this project in other console/terminal..\n\n    " + presskeys(project) + "\n\n    ",
                        timeoutNext: 10000
                    };
                    browserFolder = {
                        name: 'browser folder',
                        callback: function () {
                            var browserFolder = tnp_core_3.path.join(project.location, tnp_config_1.config.folder.browser);
                            var result = tnp_core_2.fse.existsSync(browserFolder);
                            return result;
                        },
                        errorMessage: "Please wait for dist build to finish (standalone project)"
                    };
                    if (!project.isStandaloneProject) return [3 /*break*/, 2];
                    return [4 /*yield*/, tnp_helpers_1.Helpers.conditionWait([
                            commonCondtion,
                            browserFolder,
                        ])];
                case 1:
                    _a.sent();
                    return [3 /*break*/, 4];
                case 2:
                    if (!project.isWorkspaceChildProject) return [3 /*break*/, 4];
                    conditionDist = {
                        name: "Dist finsh buildProjectErr",
                        callback: function (context) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                            var childs;
                            return tslib_1.__generator(this, function (_a) {
                                childs = project.sortedRequiredWorkspaceDependencies;
                                return [2 /*return*/, distRequredCondition(childs, context, project, [project])];
                            });
                        }); },
                        errorMessage: 'Please wait for dist build to finish... (workspace child project) '
                    };
                    conditions = [
                        conditionDist,
                        commonCondtion,
                    ];
                    return [4 /*yield*/, tnp_helpers_1.Helpers.conditionWait(conditions)];
                case 3:
                    _a.sent();
                    _a.label = 4;
                case 4: return [2 /*return*/];
            }
        });
    });
}
exports.waitForAppBuildToBePossible = waitForAppBuildToBePossible;
//#endregion
//# sourceMappingURL=waiting-for-builds-conditions-helpers.backend.js.map
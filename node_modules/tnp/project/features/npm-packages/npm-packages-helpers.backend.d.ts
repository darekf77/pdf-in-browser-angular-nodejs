import { Project } from '../../abstract';
import { Models } from 'tnp-models';
export declare function resolvePacakgesFromArgs(args: string[]): Models.npm.Package[];
export declare function executeCommand(command: string, project: Project): void;
export declare function copyMainProjectDependencies(projects: {
    mainProjectExisted: Project;
    mainProjectInTemp: Project;
}, tmpProject: Project, project: Project, pkg: Models.npm.Package): void;
export declare function copyMainProject(tmpProject: Project, project: Project, pkg: Models.npm.Package): {
    mainProjectExisted: Project;
    mainProjectInTemp: Project;
};
export declare function prepareTempProject(project: Project, pkg: Models.npm.Package): Project;
export declare function prepareCommand(pkg: Models.npm.Package, remove: boolean, useYarn: boolean, project: Project): string;
export declare function fixOptions(options?: Models.npm.ActualNpmInstallOptions): Models.npm.ActualNpmInstallOptions;
export declare function fixOptionsNpmInstall(options: Models.npm.NpmInstallOptions, project: Project): Models.npm.NpmInstallOptions;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tnp_helpers_1 = require("tnp-helpers");
var npm_packages_base_backend_1 = require("./npm-packages-base.backend");
var npm_packages_helpers_backend_1 = require("./npm-packages-helpers.backend");
var tnp_config_1 = require("tnp-config");
var NpmPackages = /** @class */ (function (_super) {
    tslib_1.__extends(NpmPackages, _super);
    function NpmPackages() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NpmPackages.prototype.installFromArgs = function (packagesNamesSpaceSeparated, smoothInstall, smartInstallPreparing) {
        if (smoothInstall === void 0) { smoothInstall = false; }
        if (smartInstallPreparing === void 0) { smartInstallPreparing = false; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var project, args, packages;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        project = this.project;
                        args = packagesNamesSpaceSeparated.split(' ').filter(function (a) { return !!a; });
                        if (!(args.length === 0)) return [3 /*break*/, 2];
                        return [4 /*yield*/, project.npmPackages.installProcess("tnp install", { smoothInstall: smoothInstall, smartInstallPreparing: smartInstallPreparing })];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 2:
                        packages = npm_packages_helpers_backend_1.resolvePacakgesFromArgs(args);
                        return [4 /*yield*/, project.npmPackages.installProcess("tnp install " + packages
                                .map(function (p) { return "" + p.installType + (p.version ? " " + p.name + "@" + p.version : ''); })
                                .join(', ') + " ", { npmPackages: packages, smoothInstall: smoothInstall, smartInstallPreparing: smartInstallPreparing })];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    NpmPackages.prototype.uninstallFromArgs = function (packagesNamesSpaceSeparated) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var project, args, packages;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        project = this.project;
                        args = packagesNamesSpaceSeparated.split(' ').filter(function (a) { return !!a; });
                        if (!(args.length === 0)) return [3 /*break*/, 1];
                        tnp_helpers_1.Helpers.error("Please specify package name: " + tnp_config_1.config.frameworkName + " uninstall exapmle-npm-package ", false, true);
                        return [3 /*break*/, 3];
                    case 1:
                        packages = npm_packages_helpers_backend_1.resolvePacakgesFromArgs(args);
                        return [4 /*yield*/, project.npmPackages.installProcess(tnp_config_1.config.frameworkName + " uninstall " + packages
                                .map(function (p) { return "" + p.installType + (p.version ? " " + p.name + "@" + p.version : ''); })
                                .join(', ') + " ", { npmPackages: packages, remove: true })];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return NpmPackages;
}(npm_packages_base_backend_1.NpmPackagesBase));
exports.NpmPackages = NpmPackages;
//#endregion
//# sourceMappingURL=npm-packages.js.map
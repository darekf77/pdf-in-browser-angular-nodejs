import { Project } from '../../abstract';
import { Models } from 'tnp-models';
import { BuildOptions } from 'tnp-db';
import { FeatureForProject } from '../../abstract';
export declare class CopyManager extends FeatureForProject {
    private buildOptions;
    private modifyPackageFile;
    private renameDestinationFolder?;
    initCopyingOnBuildFinish(buildOptions: BuildOptions, modifyPackageFile?: {
        fileRelativePath: string;
        modifyFn: (d: any) => any;
    }[], renameDestinationFolder?: string): Promise<void>;
    get projectToCopyTo(): Project[];
    private start;
    private startAndWatch;
    generateSourceCopyIn(destinationLocation: string, options?: Models.other.GenerateProjectCopyOpt): boolean;
    copyBuildedDistributionTo(destination: Project, options: {
        specyficFileRelativePath?: string;
        outDir?: 'dist';
    }, dontRemoveDestFolder: boolean): void;
}

import { Project } from '../abstract';
import { FeatureCompilerForProject } from '../abstract';
import { FeatureForProject } from '../abstract';
import { IncrementalBuildProcess } from 'morphi';
export declare class CompilerCache extends FeatureForProject {
    get isWatchModeAllowed(): Promise<boolean>;
    unsetData(): Promise<void>;
    get setUpdatoDate(): {
        frameworkFileGenerator: () => Promise<void>;
        sourceModifier: () => Promise<void>;
        join: () => Promise<void>;
        incrementalBuildProcess: () => Promise<void>;
    };
    static checkIfPojectHasUpToDateCompiledData(project: Project): Promise<boolean>;
    static setProjectHasUpToDateCompiledData(project: Project, compilerObject: FeatureCompilerForProject | IncrementalBuildProcess): Promise<void>;
    static unsetAllProjectsCompiledData(): Promise<void>;
    static unsetProjectHasUpToDateCompiledData(project: Project): Promise<void>;
}

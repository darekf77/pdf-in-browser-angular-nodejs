import { FeatureForProject } from '../../abstract';
import { Models } from 'tnp-models';
export interface IEnvironmentConfig {
    readonly config: Models.env.EnvConfig;
}
export declare class EnvironmentConfig extends FeatureForProject {
    browser: IEnvironmentConfig;
    /**
     * Avaliable for worksapce and children
     * Use only for workspace things
     * QUICK_FIX? remove children config links
     */
    get isChildProjectWithoutConfig(): boolean;
    updateData(config?: Models.env.EnvConfig): Promise<void>;
    init(args?: string, overridePortsOnly?: boolean): Promise<void>;
    static configs: {
        [location: string]: Models.env.EnvConfig;
    };
    get configsFromJs(): Models.env.EnvConfig[];
    /**
     * Can be accesed only after env.prepare()
     */
    get config(): Models.env.EnvConfig;
}

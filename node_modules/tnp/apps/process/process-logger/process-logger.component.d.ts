import { ModelDataConfig, MDC } from 'morphi';
import { OnInit, OnDestroy, AfterViewInit, ChangeDetectorRef } from '@angular/core';
import { PROCESS } from '../PROCESS';
import { BaseFormlyComponent, DualComponentController } from 'tnp-helpers';
import { BehaviorSubject } from 'rxjs';
import { DraggablePopupComponent } from 'tnp-ui';
export declare class DualComponentControllerExtended extends DualComponentController {
    get modelDataConfig(): MDC;
}
export declare class ProcessLoggerComponent extends BaseFormlyComponent implements OnInit, OnDestroy, AfterViewInit {
    private changeDetectionRef;
    DualComponentController: typeof DualComponentControllerExtended;
    changes: BehaviorSubject<any>;
    actionClicked: boolean;
    config: ModelDataConfig;
    size: 'compact' | 'normal';
    popup: DraggablePopupComponent;
    onLongPressEnd(): void;
    expandedById: {
        [key: string]: boolean;
    } & {
        save: () => void;
    };
    openOnStartById: {
        [key: string]: boolean;
    } & {
        save: () => void;
    };
    isOpen: boolean;
    get isOpenOnStart(): boolean;
    set isOpenOnStart(v: boolean);
    get isExpanded(): boolean;
    set isExpanded(v: boolean);
    get process(): PROCESS;
    get cmd(): string;
    get title(): string;
    get color(): "green" | "blue" | "red";
    get icon(): "waiting" | "play_arrow" | "stop" | "replay";
    get state(): "stop" | "start" | "restart";
    get progress(): string;
    get id(): string;
    constructor(changeDetectionRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onChange(v: any): void;
    onPin(v: boolean): void;
    openOrClose(): void;
    action(): Promise<void>;
    private subscribe;
}

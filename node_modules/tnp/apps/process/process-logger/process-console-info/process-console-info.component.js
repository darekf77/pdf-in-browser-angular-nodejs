"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var PROCESS_1 = require("../../PROCESS");
var rxjs_1 = require("rxjs");
var tnp_helpers_1 = require("tnp-helpers");
var ng2_logger_1 = require("ng2-logger");
var process_logger_base_class_1 = require("../../process-logger-base.class");
var log = ng2_logger_1.Log.create('process console info');
var ProcessConsoleInfoComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ProcessConsoleInfoComponent, _super);
    function ProcessConsoleInfoComponent(elemetRef, changeDetectionRef) {
        var _this = _super.call(this, elemetRef) || this;
        _this.changeDetectionRef = changeDetectionRef;
        _this.outputType = 'stdout';
        _this.resizeService = new tnp_helpers_1.ResizeService();
        return _this;
    }
    Object.defineProperty(ProcessConsoleInfoComponent.prototype, "process", {
        get: function () {
            return this.model;
        },
        enumerable: true,
        configurable: true
    });
    ProcessConsoleInfoComponent.prototype.scrollDown = function () {
        var _this = this;
        setTimeout(function () {
            if (_this.elemetRef && _this.elemetRef.nativeElement) {
                _this.elemetRef.nativeElement.scrollTop = _this.elemetRef.nativeElement.scrollHeight;
            }
        }, 100);
    };
    ProcessConsoleInfoComponent.prototype.clear = function (consoleContent) {
        return consoleContent.replace(/(?:\r\n|\r|\n)/g, '<br>');
    };
    ProcessConsoleInfoComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.handlers.push(this.changes.subscribe(function () {
            // console.log('CHANGES PROCESS INFO')
            _this.scrollDown();
        }));
        // console.log(`SUBSCRIBE PROPTERY: ${this.process.id} - ${this.outputType} `);
        this.process.subscribeRealtimeUpdates({
            property: this.outputType,
            bufforProperty: "_" + this.outputType,
            callback: function () {
                // log.d(`callback, outputType: "${this.outputType}"`)
                _this.changes.next(void 0);
                _this.changeDetectionRef.detectChanges();
            }
        });
    };
    ProcessConsoleInfoComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        // const savedHeight = Number(localStorage.getItem(this.lsKey));
        // console.log('from local storage height', savedHeight)
        setTimeout(function () {
            // this.elemetRef.nativeElement.style.height = `${this.height}px`;
            _this.scrollDown();
        });
    };
    ProcessConsoleInfoComponent.prototype.ngOnDestroy = function () {
        this.handlers.forEach(function (h) { return h.unsubscribe(); });
        this.resizeService.removeResizeEventListener(this.elemetRef.nativeElement);
        if (this.model instanceof PROCESS_1.PROCESS) {
            this.process.unsubscribeRealtimeUpdates(this.outputType);
        }
    };
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", rxjs_1.BehaviorSubject)
    ], ProcessConsoleInfoComponent.prototype, "changes", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], ProcessConsoleInfoComponent.prototype, "outputType", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", PROCESS_1.PROCESS)
    ], ProcessConsoleInfoComponent.prototype, "model", void 0);
    ProcessConsoleInfoComponent = tslib_1.__decorate([
        core_1.Component({
            selector: 'app-process-console-info',
            templateUrl: './process-console-info.component.html',
            styleUrls: ['./process-console-info.component.scss']
        }),
        tslib_1.__metadata("design:paramtypes", [core_1.ElementRef,
            core_1.ChangeDetectorRef])
    ], ProcessConsoleInfoComponent);
    return ProcessConsoleInfoComponent;
}(process_logger_base_class_1.ProcessLoggerBaseClass));
exports.ProcessConsoleInfoComponent = ProcessConsoleInfoComponent;
//# sourceMappingURL=process-console-info.component.js.map
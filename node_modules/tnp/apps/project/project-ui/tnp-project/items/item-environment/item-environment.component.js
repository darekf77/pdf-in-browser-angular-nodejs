"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var tnp_core_1 = require("tnp-core");
var base_item_stepper_1 = require("../base-item-stepper");
var PROJECT_1 = require("../../../../PROJECT");
var ng2_logger_1 = require("ng2-logger");
var tabs_menu_tnp_project_1 = require("../../tabs-menu-tnp-project");
var log = ng2_logger_1.Log.create('item-environment.componetn');
var ItemEnvironmentComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ItemEnvironmentComponent, _super);
    function ItemEnvironmentComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.data = [];
        _this.entity = PROJECT_1.PROJECT;
        return _this;
    }
    ItemEnvironmentComponent.prototype.tabNumber = function () {
        return tabs_menu_tnp_project_1.TnpProjectTabIndex.ENV;
    };
    ItemEnvironmentComponent.prototype.formValueChanged = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    ItemEnvironmentComponent.prototype.tabSelectedAction = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.model.updateEndGetEnvironments()];
                    case 1:
                        _a.sent();
                        // if (this.model.procStaticBuild.state !== 'notStarted' ||
                        //   (_.isString(this.model.selectedEnv) && this.model.envionments.includes(this.model.selectedEnv as any))
                        // ) {
                        //   setTimeout(() => {
                        //     this.model.selectedIndex += 1;
                        //   })
                        // }
                        this.data = this.environments;
                        return [2 /*return*/];
                }
            });
        });
    };
    Object.defineProperty(ItemEnvironmentComponent.prototype, "environments", {
        get: function () {
            var _this = this;
            if (!this.model || !tnp_core_1._.isArray(this.model.envionments)) {
                return [];
            }
            return this.model.envionments
                // .filter(env => env !== 'local')
                .map(function (env) {
                return {
                    name: env, action: function (_a) {
                        var name = _a.name;
                        setTimeout(function () {
                            _this.model.selectedEnv = name;
                            _this.model.selectedIndex = tabs_menu_tnp_project_1.TnpProjectTabIndex.BUILD;
                            _this.cd.detectChanges();
                        });
                    }
                };
            });
        },
        enumerable: true,
        configurable: true
    });
    ItemEnvironmentComponent = tslib_1.__decorate([
        core_1.Component({
            selector: 'app-item-environment',
            templateUrl: './item-environment.component.html',
            styleUrls: ['./item-environment.component.scss']
        })
    ], ItemEnvironmentComponent);
    return ItemEnvironmentComponent;
}(base_item_stepper_1.BaseItemStepperProcessBuildComponent));
exports.ItemEnvironmentComponent = ItemEnvironmentComponent;
//# sourceMappingURL=item-environment.component.js.map
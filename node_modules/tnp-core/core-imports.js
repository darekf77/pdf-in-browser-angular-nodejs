"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _ = require("lodash");
exports._ = _;
var q = require("q");
exports.q = q;
//#region @backend
var path = require("path");
exports.path = path;
var os = require("os");
exports.os = os;
var child_process = require("child_process");
exports.child_process = child_process;
var http = require("http");
exports.http = http;
var https = require("https");
exports.https = https;
var net = require("net");
exports.net = net;
var chalk_1 = require("chalk");
exports.chalk = chalk_1.default;
var dateformat = require("dateformat");
exports.dateformat = dateformat;
var spawn = require("cross-spawn");
exports.spawn = spawn;
var glob = require("glob");
exports.glob = glob;
var fse = require("fs-extra");
exports.fse = fse;
var rimraf = require("rimraf");
exports.rimraf = rimraf;
var chokidar = require("chokidar");
exports.chokidar = chokidar;
var mkdirp = require("mkdirp");
exports.mkdirp = mkdirp;
var json5 = require("json5");
exports.json5 = json5;
var ncp = require("copy-paste");
exports.ncp = ncp;
// @ts-ignore
var isElevated = require("is-elevated");
exports.isElevated = isElevated;
var ps = require("ps-node");
exports.ps = ps;
var psList = require("ps-list");
exports.psList = psList;
var fkill = require("fkill");
exports.fkill = fkill;
var portfinder = require("portfinder");
exports.portfinder = portfinder;
function win32Path(p) {
    if (process.platform !== 'win32') {
        return p;
    }
    if (/^\/[a-z]\//.test(p)) {
        p = p.replace(/^\/[a-z]\//, p.charAt(1).toUpperCase() + ":/");
    }
    return path.win32.normalize(p);
}
exports.win32Path = win32Path;
function crossPlatformPath(p) {
    if (process.platform !== 'win32') {
        return p;
    }
    if (typeof p !== 'string') {
        return p;
    }
    var isExtendedLengthPath = /^\\\\\?\\/.test(p);
    var hasNonAscii = /[^\u0000-\u0080]+/.test(p); // eslint-disable-line no-control-regex
    if (isExtendedLengthPath || hasNonAscii) {
        return p;
    }
    return p.replace(/\\/g, '/');
    // if (process.platform === 'win32') {
    //   return p.replace(/\\/g, '/');
    // }
    // return p;
}
exports.crossPlatformPath = crossPlatformPath;
/*
import {
  _,
  path,
  fse,
  rimraf,
  crossPlatformPath,
  os,
  child_process,
  http, https,
  rimraf,
  net,
} from 'tnp-core';

import { _ } from 'tnp-core';

import {  } from 'tnp-core';

*/
//# sourceMappingURL=core-imports.js.map
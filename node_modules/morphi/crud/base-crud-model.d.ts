import { ModelDataConfig } from './model-data-config';
import { Models } from '../models';
import { Repository, Connection } from 'typeorm';
export declare abstract class BaseCRUD<T> {
    connection: Connection;
    get repository(): Repository<T>;
    private repo;
    entity: any;
    constructor();
    private init;
    bufforedChanges(id: number | string, property: string, alreadyLength?: number, config?: ModelDataConfig): Models.Response<string | any[]>;
    getAll(config?: ModelDataConfig): Models.Response<T[]>;
    getBy(id: number | string, config?: ModelDataConfig): Models.Response<T>;
    updateById(id: number | string, item: T, config?: ModelDataConfig): Models.Response<T>;
    bulkUpdate(item: T[], config?: ModelDataConfig): Models.Response<T[]>;
    deleteById(id: number, config?: ModelDataConfig): Models.Response<T>;
    bulkDelete(id: (number | string)[], config?: ModelDataConfig): Models.Response<(number | string)[]>;
    create(item: T, config?: ModelDataConfig): Models.Response<T>;
    bulkCreate(item: T, config?: ModelDataConfig): Models.Response<T[]>;
}

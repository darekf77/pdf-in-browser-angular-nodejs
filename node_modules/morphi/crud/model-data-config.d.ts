export interface IModelDataPagination {
    pageNumber: number;
    rowsDisplayed: number;
    totalElements?: number;
}
export interface IModelDataSorting {
    [entityPath: string]: 'ASC' | "DESC";
}
export interface IModelDataConfig {
    pagination?: IModelDataPagination;
    /**
     * Sorting by entity properties
     */
    sorting?: IModelDataSorting;
    /**
     * Join some colums
     * EXAMPLE:
     * [author, author.publisher]
     */
    joins?: string[];
    /**
     * Find data where
     * EXAMPLE:
     * ['book.author.id === 2']
     */
    where?: string[];
    /**
     * Properties to exclude from entity/entities
     */
    exclude?: string[];
    /**
     * Properties to inlude only in entity/entities
     */
    include?: string[];
}
export declare class ModelDataConfig {
    static create(config: IModelDataConfig): ModelDataConfig;
    static fromHeader(req: Express.Request): ModelDataConfig;
    toString(): string;
    private config?;
    constructor(config?: IModelDataConfig);
    fromModels(models: any[]): {
        getPagination<T = any>(): T[];
    };
    private get defaultConfig();
    private get preprae();
    get db(): {
        readonly where: {};
        readonly join: {
            alias: string;
            leftJoinAndSelect: {};
        };
        readonly skip: number;
        readonly take: number;
    };
    get set(): {
        include(entity: any): void;
        exclude(entity: any): void;
        where(command: string): void;
        joins(command: string): void;
        readonly pagination: {
            totalElement(value: number): void;
            pageNumber(value: number): void;
            rowDisplayed(value: number): void;
        };
    };
    get get(): {
        readonly pagination: {
            readonly totalElements: number;
            readonly pageNumber: number;
            readonly rowsDisplayed: number;
        };
    };
    get pagination(): IModelDataPagination;
    get sorting(): IModelDataSorting;
    get joins(): string[];
    get where(): string[];
    get exclude(): string[];
    get include(): string[];
}
export declare class MDC extends ModelDataConfig {
}

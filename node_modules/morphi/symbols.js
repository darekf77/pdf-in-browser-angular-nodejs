"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tnp_core_1 = require("tnp-core");
exports.SYMBOL = {
    HAS_TABLE_IN_DB: Symbol(),
    MDC_KEY: 'modeldataconfig',
    REALTIME: {
        NAMESPACE: 'morphirealtime',
        ROOM: {
            SUBSCRIBE: {
                ENTITY_UPDATE_EVENTS: 'subscribeEntityEvents',
                ENTITY_PROPERTY_UPDATE_EVENTS: 'subscribeEntityPropertyEvents',
            },
            UNSUBSCRIBE: {
                ENTITY_UPDATE_EVENTS: 'unsubscribeEntityEvents',
                ENTITY_PROPERTY_UPDATE_EVENTS: 'unsubscribeEntityPropertyEvents',
            }
        },
        EVENT: {
            ENTITY_UPDATE_BY_ID: function (className, entityId) {
                return ("entityupdatebyid" + tnp_core_1._.camelCase(className) + entityId).toLowerCase();
            },
            ENTITY_PROPTERY_UPDATE_BY_ID: function (className, property, entityId) {
                return ("entityupdatebyid" + tnp_core_1._.camelCase(className) + tnp_core_1._.camelCase(property) + entityId).toLowerCase();
            }
        },
        ROOM_NAME: {
            UPDATE_ENTITY: function (className, entityId) {
                return ("room" + tnp_core_1._.camelCase(className) + entityId).toLowerCase();
            },
            UPDATE_ENTITY_PROPERTY: function (className, property, entityId) {
                return ("room" + tnp_core_1._.camelCase(className) + tnp_core_1._.camelCase(property) + entityId).toLowerCase();
            }
        }
    },
    X_TOTAL_COUNT: 'x-total-count',
    CRUD_TABLE_MODEL: 'model',
    CIRCURAL_OBJECTS_MAP_BODY: 'circuralmapbody',
    CIRCURAL_OBJECTS_MAP_QUERY_PARAM: 'circuralmapbody',
    MAPPING_CONFIG_HEADER: 'mappingheader',
    MAPPING_CONFIG_HEADER_BODY_PARAMS: 'mhbodyparams',
    MAPPING_CONFIG_HEADER_QUERY_PARAMS: 'mhqueryparams',
    ENDPOINT_META_CONFIG: 'ng2_rest_endpoint_config',
    CLASS_DECORATOR_CONTEXT: '$$ng2_rest_class_context',
    SOCKET_MSG: 'socketmessageng2rest',
    ANGULAR: {
        INPUT_NAMES: Symbol()
    }
};
//# sourceMappingURL=symbols.js.map
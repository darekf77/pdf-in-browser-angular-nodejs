import { BaseCRUD } from '../crud/base-crud-model';
import { Models } from '../models';
export declare function Controller(options?: {
    className?: string;
    realtime?: boolean;
    entity?: Function;
    additionalEntities?: Function[];
    path?: string;
    autoinit?: boolean;
    auth?: Models.AuthCallBack;
}): (target: Function) => any;
export interface BASE_CONTROLLER_INIT {
    initExampleDbData?: (isWoker?: boolean) => Promise<any>;
}
export declare abstract class BASE_CONTROLLER<T> extends BaseCRUD<T> implements BASE_CONTROLLER_INIT {
    /**
     * Controller entites
     */
    entites: Function[];
    initExampleDbData(isWorker?: boolean): Promise<void>;
}

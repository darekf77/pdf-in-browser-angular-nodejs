import { CodeCut } from './browser-code-cut';
import { BackendCompilation } from './compilation-backend';
import { IncCompiler } from 'incremental-compiler';
import { ConfigModels } from 'tnp-config';
export declare class BroswerCompilation extends BackendCompilation {
    /**
     * Relative path for browser temporary src
     * Ex.   tmp-src-dist-browser
     */
    sourceOutBrowser: string;
    backendOutFolder: string;
    private customCompiler?;
    get compilationFolderPath(): string;
    compilerName: string;
    codecut: CodeCut;
    constructor(
    /**
     * Relative path for browser temporary src
     * Ex.   tmp-src-dist-browser
     */
    sourceOutBrowser: string, outFolder: ConfigModels.OutFolder, location: string, cwd: string, backendOutFolder: string, customCompiler?: string);
    syncAction(files: string[]): Promise<void>;
    initCodeCut(filesPathes: string[]): void;
    asyncAction(event: IncCompiler.Change): Promise<void>;
    compile(watch?: boolean): Promise<void>;
}

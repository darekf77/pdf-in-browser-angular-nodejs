/// <reference types="node" />
import { FallbackMode, Options, RecordMode } from './options.backend';
import TalkbackServer from './server.backend';
import RequestHandler from './request-handler.backend';
export {};
export interface More {
    [key: string]: any;
}
export interface MatchingContext extends More {
    id: string;
}
export interface ReqRes {
    headers: any;
    body: Buffer;
}
export interface Req extends ReqRes {
    url: string;
    method: string;
}
export declare type HttpRequest = Req;
export interface Res extends ReqRes {
    status: number;
}
export declare type HttpResponse = Res;
export interface Metadata extends More {
    createdAt: Date;
    host: string;
    tag?: string;
    errorRate?: number;
    latency?: number | number[];
    reqUncompressed?: boolean;
    resUncompressed?: boolean;
    reqHumanReadable?: boolean;
    resHumanReadable?: boolean;
}
declare type TalkbackBase = (options: Partial<Options>) => TalkbackServer;
export interface Talkback extends TalkbackBase {
    Options: {
        Default: Options;
        FallbackMode: typeof FallbackMode;
        RecordMode: typeof RecordMode;
    };
    requestHandler(options: Partial<Options>): RequestHandler;
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tnp_core_1 = require("tnp-core");
var headers_backend_1 = require("./headers.backend");
var contentTypeParser = require('content-type');
var equals = function (to) { return function (contentType) { return to == contentType; }; };
exports.jsonTypes = [
    equals("application/json"),
    function (contentType) { return contentType.startsWith("application/") && contentType.endsWith("+json"); }
];
var humanReadableContentTypes = tslib_1.__spreadArrays([
    equals("application/javascript"),
    equals("text/css"),
    equals("text/html"),
    equals("text/javascript"),
    equals("text/plain")
], exports.jsonTypes);
var MediaType = /** @class */ (function () {
    function MediaType(htmlReqRes) {
        this.htmlReqRes = htmlReqRes;
    }
    MediaType.prototype.isHumanReadable = function () {
        var contentType = this.contentType();
        if (!contentType) {
            return false;
        }
        return humanReadableContentTypes.some(function (comparator) { return comparator(contentType); });
    };
    MediaType.prototype.isJSON = function () {
        var contentType = this.contentType();
        if (!contentType) {
            return false;
        }
        var result = exports.jsonTypes.some(function (comparator) { return comparator('application/json'); });
        return result;
    };
    MediaType.prototype.contentType = function () {
        var contentTypeHeader = headers_backend_1.default.read(this.headers(), "content-type");
        if (!contentTypeHeader) {
            return null;
        }
        var parsedContentType = contentTypeParser.parse(contentTypeHeader);
        return parsedContentType.type;
    };
    MediaType.prototype.headers = function () {
        return tnp_core_1._.merge(this.htmlReqRes.headers, {
            'content-type': 'application/json'
        });
    };
    return MediaType;
}());
exports.default = MediaType;
//# sourceMappingURL=media-type.backend.js.map
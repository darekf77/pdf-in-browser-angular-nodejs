"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//#region @backend
var tnp_cli_1 = require("tnp-cli");
//#endregion
var tnp_core_1 = require("tnp-core");
function error(details, noExit, noTrace) {
    if (noExit === void 0) { noExit = false; }
    if (noTrace === void 0) { noTrace = false; }
    if (tnp_core_1.Helpers.isBrowser) {
        console.error(details);
        return;
    }
    //#region @backend
    // Error.stackTraceLimit = Infinity;
    if (!global.tnp_normal_mode) {
        noTrace = true;
    }
    if (typeof details === 'object') {
        try {
            var json = JSON.stringify(details);
            if (global.tnp_normal_mode) {
                if (noTrace) {
                    !global.muteMessages && console.log(tnp_cli_1.CLI.chalk.red(json));
                }
                else {
                    !global.muteMessages && console.trace(tnp_cli_1.CLI.chalk.red(json));
                }
            }
            else {
                console.log(json);
                return;
            }
        }
        catch (error) {
            if (global.tnp_normal_mode) {
                if (noTrace) {
                    !global.muteMessages && console.log(details);
                }
                else {
                    !global.muteMessages && console.trace(details);
                }
            }
            else {
                console.log(details);
                return;
            }
        }
    }
    else {
        if (global.tnp_normal_mode) {
            if (noTrace) {
                !global.muteMessages && console.log(tnp_cli_1.CLI.chalk.red(details));
            }
            else {
                !global.muteMessages && console.trace(tnp_cli_1.CLI.chalk.red(details));
            }
        }
        else {
            console.log(details);
            return;
        }
    }
    if (global[config.message.tnp_normal_mode]) {
        if (!noExit) {
            process.exit(1);
        }
    }
    //#endregion
}
exports.error = error;
function info(details) {
    if (tnp_core_1.Helpers.isBrowser) {
        console.info(details);
        return;
    }
    //#region @backend
    if (!global.muteMessages && !global.hideInfos) {
        console.log(tnp_cli_1.CLI.chalk.green(details));
        global.tnpNonInteractive && PROGRESS_DATA.log({ msg: details });
    }
    //#endregion
}
exports.info = info;
function log(details) {
    if (tnp_core_1.Helpers.isBrowser) {
        console.log(details);
        return;
    }
    //#region @backend
    // console.log('global.muteMessages', global.muteMessages);
    // console.log('global.hideLog', global.hideLog);
    if ((!global.muteMessages && !global.hideLog)) {
        console.log(tnp_cli_1.CLI.chalk.gray(details));
        global.tnpNonInteractive && PROGRESS_DATA.log({ msg: details });
    }
    //#endregion
}
exports.log = log;
function warn(details, trace) {
    if (trace === void 0) { trace = false; }
    if (tnp_core_1.Helpers.isBrowser) {
        console.warn(details);
        return;
    }
    //#region @backend
    if (!global.tnp_normal_mode) {
        trace = false;
    }
    if (trace) {
        (!global.muteMessages && !global.hideWarnings) && console.trace(tnp_cli_1.CLI.chalk.yellow(details));
    }
    else {
        (!global.muteMessages && !global.hideWarnings) && console.log(tnp_cli_1.CLI.chalk.yellow(details));
    }
    //#endregion
}
exports.warn = warn;
//# sourceMappingURL=helpers-messages.js.map
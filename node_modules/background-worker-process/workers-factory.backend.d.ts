import { Morphi } from 'morphi';
import { WorkerProcessClass } from './worker-process-class';
export interface WorkersFactoryOptions {
    /**
     * default true
     */
    startWorkerServiceAsChildProcess?: boolean;
    killAlreadRegisteredProcess?: boolean;
    args?: string[] | string;
    disabledRealtime?: boolean;
    preventSameContexts?: boolean;
}
export declare class WorkersFactor {
    static create<T extends WorkerProcessClass = any>(classFN: Function, entities: Function[], servicePort: number, options?: WorkersFactoryOptions): Promise<{
        host: string;
        port: number;
        instance: T;
        context: Morphi.FrameworkContext;
    }>;
}

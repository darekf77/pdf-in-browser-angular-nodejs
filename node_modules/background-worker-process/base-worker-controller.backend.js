"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tnp_core_1 = require("tnp-core");
var morphi_1 = require("morphi");
//#region @notForNpm
var tnp_db_1 = require("tnp-db");
//#endregion
var project_1 = require("./project");
var bootsrap_worker_backend_1 = require("./bootsrap-worker.backend");
var worker_process_class_1 = require("./worker-process-class");
//#region @notForNpm
var test_entity_backend_1 = require("./test-entity.backend");
//#endregion
var typescript_class_helpers_1 = require("typescript-class-helpers");
var BaseWorkerController = /** @class */ (function (_super) {
    tslib_1.__extends(BaseWorkerController, _super);
    function BaseWorkerController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.args = [];
        _this.updates = [];
        return _this;
    }
    Object.defineProperty(BaseWorkerController.prototype, "filename", {
        get: function () {
            return tnp_core_1.crossPlatformPath(__filename);
        },
        enumerable: true,
        configurable: true
    });
    BaseWorkerController.prototype.html = function () {
        var _this = this;
        return function (req, res) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            return [2 /*return*/, "<h1> hello worker </h1>"];
        }); }); };
    };
    BaseWorkerController.prototype.hello = function () {
        var _this = this;
        return function (req, res) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            return [2 /*return*/, 'hello'];
        }); }); };
    };
    BaseWorkerController.prototype.helloObj = function () {
        var _this = this;
        return function (req, res) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            helo: 'asd';
            return [2 /*return*/];
        }); }); };
    };
    BaseWorkerController.prototype.kill = function () {
        process.exit(0);
    };
    BaseWorkerController.prototype.info = function () {
        var _this = this;
        return function (req, res) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, JSON.stringify(this.updates)];
            });
        }); };
    };
    //#region @notForNpm
    BaseWorkerController.prototype.allprojects = function () {
        var _this = this;
        return function (req, res) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var db, projects;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, tnp_db_1.TnpDB.Instance()];
                    case 1:
                        db = _a.sent();
                        return [4 /*yield*/, db.getProjects()];
                    case 2:
                        projects = (_a.sent()).map(function (p) {
                            return project_1.Project.From(p.locationOfProject);
                        });
                        return [2 /*return*/, projects];
                }
            });
        }); };
    };
    //#endregion
    BaseWorkerController.prototype.initExampleDbData = function (isWorker) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                if (isWorker) {
                    setTimeout(function () {
                        _this.updateRealtime();
                    }, 2000);
                }
                return [2 /*return*/];
            });
        });
    };
    BaseWorkerController.prototype.updateRealtime = function () {
        var _this = this;
        //#region @notForNpm
        var id = 1;
        morphi_1.Morphi.Realtime.Server.TrigggerEntityChanges(test_entity_backend_1.TestEntity.by(id));
        var msg = "realtime update of (" + typescript_class_helpers_1.CLASS.getName(test_entity_backend_1.TestEntity) + ", id:" + id + ").. from worker " + typescript_class_helpers_1.CLASS.getNameFromObject(this);
        this.updates.push("[" + (new Date).getTime() + "] " + msg);
        setTimeout(function () {
            _this.updateRealtime();
        }, 2000);
        // process.stdout.on('data', (data) => {
        //   this.updates.push(data?.toString());
        // })
        //#endregion
    };
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET('/'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", Object)
    ], BaseWorkerController.prototype, "html", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET(),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", Object)
    ], BaseWorkerController.prototype, "hello", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET(),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", Object)
    ], BaseWorkerController.prototype, "kill", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET('/info'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", Object)
    ], BaseWorkerController.prototype, "info", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET(),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", Object)
    ], BaseWorkerController.prototype, "allprojects", null);
    BaseWorkerController = tslib_1.__decorate([
        morphi_1.Morphi.Controller({
            className: 'BaseWorkerController',
        })
    ], BaseWorkerController);
    return BaseWorkerController;
}(worker_process_class_1.WorkerProcessClass));
exports.BaseWorkerController = BaseWorkerController;
exports.default = bootsrap_worker_backend_1.BootstrapWorker.bootstrap(BaseWorkerController);
//# sourceMappingURL=base-worker-controller.backend.js.map
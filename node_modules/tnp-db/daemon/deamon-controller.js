"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var morphi_1 = require("morphi");
//#region @backend
var tnp_core_1 = require("tnp-core");
var wrapper_db_backend_1 = require("../wrapper-db.backend");
var tnp_helpers_1 = require("tnp-helpers");
var background_worker_process_1 = require("background-worker-process");
var background_worker_process_2 = require("background-worker-process");
var _ = require("lodash");
var path = require("path");
var moment = require("moment");
var daemon_entity_1 = require("../daemon/daemon-entity");
//#endregion
var TEXT_AREA_CSS = 'style="width: 772px; min-height: 50px;"';
var DbDaemonController = /** @class */ (function (_super) {
    tslib_1.__extends(DbDaemonController
    //#region @backend
    , _super);
    function DbDaemonController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.logArr = [];
        _this._data = {
            projects: [
                'test1'
            ]
        };
        _this.saveToFileDebounceAction = _this.debounce(function () {
            _this.saveToFileAction();
        });
        //#endregion
        _this.read = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/];
            });
        }); };
        _this.defaults = function (data) {
            return {
                write: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                    var result;
                    return tslib_1.__generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, this.defaultsWriteToDB(data).received];
                            case 1:
                                result = _a.sent();
                                return [2 /*return*/, result.body.json];
                        }
                    });
                }); }
            };
        };
        _this.set = function (objPath, json) {
            return {
                write: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                    var result;
                    return tslib_1.__generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, this.setValueToDb(objPath, json).received];
                            case 1:
                                result = _a.sent();
                                return [2 /*return*/, result.body.json];
                        }
                    });
                }); }
            };
        };
        _this.get = function (objPath) {
            return {
                value: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                    var result;
                    return tslib_1.__generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, this.getValueFromDb(objPath).received];
                            case 1:
                                result = _a.sent();
                                return [2 /*return*/, result.body.json];
                        }
                    });
                }); }
            };
        };
        return _this;
    }
    DbDaemonController.prototype.log = function (msg) {
        //#region @backend
        msg = "<strong>[" + moment().format() + "]</strong> " + msg;
        tnp_helpers_1.Helpers.log(msg);
        this.logArr.push(msg);
        //#endregion
    };
    Object.defineProperty(DbDaemonController.prototype, "data", {
        get: function () {
            return this._data;
        },
        enumerable: true,
        configurable: true
    });
    //#region @backend
    DbDaemonController.prototype.debounce = function (fn) {
        return _.debounce(fn, 1000);
    };
    DbDaemonController.prototype.saveToFileAction = function () {
        var pathToDb = (_.isString(this.pathToDb) && this.pathToDb.endsWith('.json')) ? this.pathToDb :
            path.join(process.cwd(), 'tmp-worker-db.json');
        tnp_helpers_1.Helpers.writeFile(pathToDb, this.data);
        this.log("[debounce] Data update in db in <a href=\"file://" + pathToDb + "\">" + pathToDb + "</a>");
    };
    DbDaemonController.prototype.defaultsWriteToDB = function (data) {
        var _this = this;
        //#region @backendFunc
        return function (req, res) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                this.log("defaultsWriteToDB: <br>" + JSON.stringify(data) + " ");
                _.keys(data).forEach(function (key) {
                    _this.data[key] = data[key];
                });
                this.saveToFileDebounceAction();
                return [2 /*return*/, data];
            });
        }); };
        //#endregion
    };
    DbDaemonController.prototype.triggerSave = function () {
        var _this = this;
        //#region @backendFunc
        return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.log("[triggerSave]");
                this.saveToFileAction();
                return [2 /*return*/];
            });
        }); };
        //#endregion
    };
    DbDaemonController.prototype.triggerChangeOfProject = function (location, channel) {
        var _this = this;
        //#region @backendFunc
        return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var a;
            return tslib_1.__generator(this, function (_a) {
                this.logArr = [];
                if (channel) {
                    this.log("[TrigggerEntityPropertyChanges] for locatino: \"" + location + "\", channel: \"" + channel + "\"");
                    a = daemon_entity_1.DbUpdateProjectEntity.for({ location: location });
                    morphi_1.Morphi.Realtime.Server.TrigggerEntityPropertyChanges(a, channel);
                }
                else {
                    this.log("[triggerChangeOfProject] for locatino: \"" + location + "\"");
                    morphi_1.Morphi.Realtime.Server.TrigggerEntityChanges(daemon_entity_1.DbUpdateProjectEntity, location);
                }
                return [2 /*return*/];
            });
        }); };
        //#endregion
    };
    DbDaemonController.prototype.setValueToDb = function (objPath, json) {
        var _this = this;
        //#region @backendFunc
        return function (req, res) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.log("[setValueToDb] key " + objPath + " = <br> <textarea " + TEXT_AREA_CSS + " >" + JSON.stringify(json, null, 4) + "</textarea> ");
                _.set(this.data, objPath, json);
                this.saveToFileDebounceAction();
                return [2 /*return*/, this.data[objPath]];
            });
        }); };
        //#endregion
    };
    DbDaemonController.prototype.getValueFromDb = function (objPath) {
        var _this = this;
        //#region @backendFunc
        return function (req, res) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.log("[getValueFromDb] key " + objPath + " = <br> <textarea " + TEXT_AREA_CSS + " >" + (this.data[objPath] ? JSON.stringify(this.data[objPath]) : '<nothing>') + "</textarea> ");
                return [2 /*return*/, _.get(this.data, objPath)];
            });
        }); };
        //#endregion
    };
    //#region @backend
    DbDaemonController.prototype.copyAllToWorker = function (data, pathToDb) {
        var _this = this;
        return function (req, res) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                this.log("[copyAllToWorker]");
                if (tnp_helpers_1.Helpers.exists(pathToDb)) {
                    this.pathToDb = pathToDb;
                }
                _.keys(data).forEach(function (key) {
                    _this.data[key] = data[key];
                });
                this.saveToFileDebounceAction();
                return [2 /*return*/, this.data];
            });
        }); };
    };
    Object.defineProperty(DbDaemonController.prototype, "filename", {
        //#endregion
        //#region @backend
        get: function () {
            return tnp_core_1.crossPlatformPath(__filename);
        },
        enumerable: true,
        configurable: true
    });
    //#endregion
    DbDaemonController.prototype.hello = function () {
        var _this = this;
        //#region @backendFunc
        this.log("[hello]");
        return function (req, res) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
            return [2 /*return*/, 'hello'];
        }); }); };
        //#endregion
    };
    DbDaemonController.prototype.allprojects = function () {
        var _this = this;
        //#region @backendFunc
        return function (req, res) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var db, projects;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        db = wrapper_db_backend_1.TnpDB.InstanceSync;
                        return [4 /*yield*/, db.getProjects()];
                    case 1:
                        projects = (_a.sent()).map(function (p) {
                            return tnp_helpers_1.Project.From(p.locationOfProject);
                        });
                        return [2 /*return*/, projects];
                }
            });
        }); };
        //#endregion
    };
    DbDaemonController.prototype.info = function () {
        var _this = this;
        return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.log("[info]");
                return [2 /*return*/, "\n\n      <h1><a href=\"log\" > log </a> </h1>\n      <h1><a href=\"wholeDb\" > whole json db </a> </h1>\n\n      "];
            });
        }); };
    };
    DbDaemonController.prototype.showLog = function () {
        var _this = this;
        return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.log("[showLog]");
                return [2 /*return*/, this.logArr.join('<hr>')];
            });
        }); };
    };
    DbDaemonController.prototype.wholeDb = function () {
        var _this = this;
        //#region @backendFunc
        return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.log("[wholeDb]");
                return [2 /*return*/, JSON.stringify(this.data)];
            });
        }); };
        //#endregion
    };
    DbDaemonController.prototype.wholeDbWithPath = function (pathToData) {
        var _this = this;
        //#region @backendFunc
        return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var data;
            return tslib_1.__generator(this, function (_a) {
                this.log("[wholeDb]");
                data = _.get(this.data, pathToData, {});
                return [2 /*return*/, JSON.stringify(data)];
            });
        }); };
        //#endregion
    };
    DbDaemonController.prototype.showEntity = function (entityname) {
        var _this = this;
        //#region @backendFunc
        return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var entity;
            return tslib_1.__generator(this, function (_a) {
                entity = this.data[entityname];
                if (_.isUndefined(entity)) {
                    return [2 /*return*/, "no entity by name: " + entityname];
                }
                this.log("[showEntity] entity: " + entityname);
                return [2 /*return*/, JSON.stringify(entity)];
            });
        }); };
        //#endregion
    };
    DbDaemonController.prototype.initExampleDbData = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.log("[initExampleDbData]");
                return [2 /*return*/];
            });
        });
    };
    tslib_1.__decorate([
        morphi_1.Morphi.Http.POST('/defaults'),
        tslib_1.__param(0, morphi_1.Morphi.Http.Param.Body('data')),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [Object]),
        tslib_1.__metadata("design:returntype", Object)
    ], DbDaemonController.prototype, "defaultsWriteToDB", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.PUT('/save'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", Object)
    ], DbDaemonController.prototype, "triggerSave", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET(),
        tslib_1.__param(0, morphi_1.Morphi.Http.Param.Query('location')),
        tslib_1.__param(1, morphi_1.Morphi.Http.Param.Query('channel')),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [String, String]),
        tslib_1.__metadata("design:returntype", Object)
    ], DbDaemonController.prototype, "triggerChangeOfProject", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.PUT('/set'),
        tslib_1.__param(0, morphi_1.Morphi.Http.Param.Query('objPath')),
        tslib_1.__param(1, morphi_1.Morphi.Http.Param.Body('json')),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [String, Object]),
        tslib_1.__metadata("design:returntype", Object)
    ], DbDaemonController.prototype, "setValueToDb", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET('/get'),
        tslib_1.__param(0, morphi_1.Morphi.Http.Param.Query('objPath')),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [String]),
        tslib_1.__metadata("design:returntype", Object)
    ], DbDaemonController.prototype, "getValueFromDb", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.POST(),
        tslib_1.__param(0, morphi_1.Morphi.Http.Param.Body('data')),
        tslib_1.__param(1, morphi_1.Morphi.Http.Param.Query('pathToDb')),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [Object, String]),
        tslib_1.__metadata("design:returntype", Object)
    ], DbDaemonController.prototype, "copyAllToWorker", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET(),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", Object)
    ], DbDaemonController.prototype, "hello", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET(),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", Object)
    ], DbDaemonController.prototype, "allprojects", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET('/info'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", Object)
    ], DbDaemonController.prototype, "info", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET('/log'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", Object)
    ], DbDaemonController.prototype, "showLog", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET('/wholeDb'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], DbDaemonController.prototype, "wholeDb", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET('/wholeDb/:pathToData'),
        tslib_1.__param(0, morphi_1.Morphi.Http.Param.Path('pathToData')),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [String]),
        tslib_1.__metadata("design:returntype", void 0)
    ], DbDaemonController.prototype, "wholeDbWithPath", null);
    tslib_1.__decorate([
        morphi_1.Morphi.Http.GET('/entity/:entityname'),
        tslib_1.__param(0, morphi_1.Morphi.Http.Param.Path('entityname')),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [String]),
        tslib_1.__metadata("design:returntype", Object)
    ], DbDaemonController.prototype, "showEntity", null);
    DbDaemonController = tslib_1.__decorate([
        morphi_1.Morphi.Controller({
            className: 'DbDaemonController'
        })
    ], DbDaemonController);
    return DbDaemonController;
}(background_worker_process_2.WorkerProcessClass));
exports.DbDaemonController = DbDaemonController;
//#region @backend
exports.default = background_worker_process_1.BootstrapWorker.bootstrap(DbDaemonController);
//#endregion
//# sourceMappingURL=deamon-controller.js.map
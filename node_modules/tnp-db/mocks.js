"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//#region @backend
var path = require("path");
var fse = require("fs-extra");
var _ = require("lodash");
var typescript_class_helpers_1 = require("typescript-class-helpers");
function mocks() {
    var Project = /** @class */ (function () {
        function Project(location) {
            this.location = location;
            this.isTnpProjectBuild = false;
        }
        Object.defineProperty(Project, "Current", {
            get: function () {
                var inst = new Project(path.join(process.cwd()));
                return inst;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Project, "Tnp", {
            get: function () {
                var inst = new Project(path.join(process.cwd(), '../tnp'));
                return inst;
            },
            enumerable: true,
            configurable: true
        });
        Project.From = function (location) {
            if (fse.existsSync(location) &&
                fse.lstatSync(location).isDirectory() &&
                fse.existsSync(path.join(location, 'package.json'))) {
                var inst_1 = new Project(location);
                if (_.isUndefined(Project.projects.find(function (p) { return p.location === inst_1.location; }))) {
                    Project.projects.push(inst_1);
                }
                return inst_1;
            }
        };
        Project.projects = [];
        return Project;
    }());
    typescript_class_helpers_1.CLASS.setName(Project, 'Project');
    var BuildOptions = /** @class */ (function () {
        function BuildOptions() {
        }
        BuildOptions.from = function () {
            return new BuildOptions();
        };
        return BuildOptions;
    }());
    typescript_class_helpers_1.CLASS.setName(BuildOptions, 'BuildOptions');
}
exports.mocks = mocks;
//#endregion
//# sourceMappingURL=mocks.js.map
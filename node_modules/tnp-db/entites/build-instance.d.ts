import { DBBaseEntity } from './base-entity';
import { Project } from 'tnp-helpers';
import { BuildOptions } from '../build-options';
export declare type IBuildInstance = {
    buildOptions?: BuildOptions;
    cmd?: string;
    pid: number;
    ppid: number;
    location?: string;
};
export declare class BuildInstance extends DBBaseEntity implements IBuildInstance {
    data?: IBuildInstance;
    constructor(data?: IBuildInstance);
    prepare(reason: string): Promise<void>;
    get isTnpProjectBuild(): boolean;
    updateCmdFrom(buildOptions: BuildOptions): Promise<void>;
    private _buildOptions;
    get buildOptions(): BuildOptions;
    cmd?: string;
    isEqual(anotherInstace: BuildInstance): boolean;
    get brief(): string;
    kill(): void;
    pid: number;
    ppid: number;
    location?: string;
    get project(): Project<any>;
}

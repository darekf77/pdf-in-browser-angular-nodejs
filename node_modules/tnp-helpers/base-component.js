"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var router_1 = require("@angular/router");
var BaseComponent = /** @class */ (function () {
    function BaseComponent() {
        // @ts-ignore
        this.model = {};
        this.handlers = [];
    }
    BaseComponent.prototype.ngOnDestroy = function () {
        this.handlers.forEach(function (h) { return h.unsubscribe(); });
        this.handlers.length = 0;
    };
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Object)
    ], BaseComponent.prototype, "model", void 0);
    BaseComponent = tslib_1.__decorate([
        core_1.Component({
            selector: 'app-base-component-meta',
            template: '<div></div>'
        })
    ], BaseComponent);
    return BaseComponent;
}());
exports.BaseComponent = BaseComponent;
var isCalledNgInitAfterInternalRefresh = Symbol();
var BaseComponentForRouter = /** @class */ (function (_super) {
    tslib_1.__extends(BaseComponentForRouter, _super);
    function BaseComponentForRouter(__router) {
        var _this = _super.call(this) || this;
        _this.__router = __router;
        _this[isCalledNgInitAfterInternalRefresh] = false;
        return _this;
    }
    BaseComponentForRouter.prototype.isCalledNgInitAfterInternalRefresh = function () {
        return !!this[isCalledNgInitAfterInternalRefresh];
    };
    BaseComponentForRouter.prototype.reloadNgOninitOnUrlChange = function () {
        var _this = this;
        this.handlers.push(this.__router.events.subscribe(function (event) {
            if (event instanceof router_1.NavigationEnd && _this['ngOnInit']) {
                _this[isCalledNgInitAfterInternalRefresh] = true;
                _this['ngOnInit']();
                if (_this[isCalledNgInitAfterInternalRefresh]) {
                    _this[isCalledNgInitAfterInternalRefresh] = false;
                }
            }
        }));
    };
    return BaseComponentForRouter;
}(BaseComponent));
exports.BaseComponentForRouter = BaseComponentForRouter;
//# sourceMappingURL=base-component.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tnp_core_1 = require("tnp-core");
var HelpersStrings = /** @class */ (function () {
    function HelpersStrings() {
    }
    /**
     * Example:
     *
     * const result = interpolateString("I'm {age} years old!")
     * .withParameters({ age: 29 });
     *
     * const result = interpolateString("The {a} says {n}, {n}, {n}!")
     * .withParameters({ a: 'cow', n: 'moo' });
     *
     *
     * @param value string to interpolate
     * @param parameters object with parametes
     */
    HelpersStrings.prototype.interpolateString = function (value) {
        if (typeof value !== 'string') {
            console.warn('[ss-logic][helper] Value for interpolation is not string: ', value);
            return value;
        }
        return {
            withParameters: function (parameters) {
                if (typeof parameters !== 'object') {
                    console.warn('[ss-logic][helper] Parameters are not a object: ', parameters);
                    return value;
                }
                return value.replace(/{([^{}]*)}/g, function (a, b) {
                    var r = parameters[b];
                    return typeof r === 'string' || typeof r === 'number' ? r : a;
                });
            }
        };
    };
    HelpersStrings.prototype.numValue = function (pixelsCss) {
        // tslint:disable-next-line:radix
        return parseInt(pixelsCss.replace('px', ''));
    };
    /**
     * examples:
     * 'aa bb bb' => ['aa','bb','cc'],
     * 'aa' => ['aa']
     * ['aa'] => ['aa']
     */
    HelpersStrings.prototype.splitIfNeed = function (stringOrArr) {
        var res = [];
        if (tnp_core_1._.isArray(stringOrArr)) {
            res = stringOrArr.map(function (s) {
                return s.trim();
            });
        }
        if (tnp_core_1._.isString(stringOrArr)) {
            res = stringOrArr.split(/\s*[\s,]\s*/);
        }
        return res.filter(function (f) { return !!f && (f.trim() !== ''); });
    };
    return HelpersStrings;
}());
exports.HelpersStrings = HelpersStrings;
//# sourceMappingURL=helpers-strings.js.map
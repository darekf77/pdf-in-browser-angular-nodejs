import { Subscription } from 'rxjs';
import { FieldType } from '@ngx-formly/core';
import { OnInit, AfterViewInit } from '@angular/core';
import { FormControl } from '@angular/forms';
import { DualComponentController } from './dual-component-ctrl';
import { EventEmitter } from '@angular/core';
export declare abstract class BaseFormlyComponent<T extends DualComponentController = DualComponentController> extends FieldType implements OnInit, Partial<DualComponentController<T>>, AfterViewInit {
    protected DualComponentController: typeof DualComponentController;
    ctrl: T;
    pizda: any;
    get mode(): any;
    set mode(v: any);
    disabled: boolean;
    required: boolean;
    label: string;
    placeholder: string;
    defaultValue: T;
    set model(v: any);
    get model(): any;
    path: string;
    change: EventEmitter<any>;
    set key(value: string);
    get key(): string;
    formControl: FormControl;
    protected handlers: Subscription[];
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    private __field;
    ngOnInit(): void;
}

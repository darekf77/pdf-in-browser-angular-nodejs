"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@ngx-formly/core");
var core_2 = require("@angular/core");
var forms_1 = require("@angular/forms");
var ng2_logger_1 = require("ng2-logger");
var dual_component_ctrl_1 = require("./dual-component-ctrl");
var core_3 = require("@angular/core");
var log = ng2_logger_1.Log.create('base formly component', ng2_logger_1.Level.__NOTHING);
var BaseFormlyComponent = /** @class */ (function (_super) {
    tslib_1.__extends(BaseFormlyComponent, _super);
    function BaseFormlyComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.DualComponentController = dual_component_ctrl_1.DualComponentController;
        _this.ctrl = {};
        _this.change = new core_3.EventEmitter();
        _this.handlers = [];
        _this.__field = {
            templateOptions: {}
        };
        return _this;
    }
    Object.defineProperty(BaseFormlyComponent.prototype, "mode", {
        // @ts-ignore
        get: function () {
            return this.ctrl.mode;
        },
        // @ts-ignore
        set: function (v) {
            this.ctrl.mode = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseFormlyComponent.prototype, "model", {
        get: function () {
            return this.ctrl.model;
        },
        // @ts-ignore
        set: function (v) {
            this.ctrl.model = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseFormlyComponent.prototype, "key", {
        get: function () {
            if (this.ctrl && this.ctrl.isFormlyMode) {
                return this.field.key;
            }
            return this.path;
        },
        // @ts-ignore
        set: function (value) {
            if (this.ctrl && this.ctrl.isFormlyMode) {
                return;
            }
            this.path = value;
        },
        enumerable: true,
        configurable: true
    });
    BaseFormlyComponent.prototype.ngOnDestroy = function () {
        this.handlers.forEach(function (h) { return h.unsubscribe(); });
        this.handlers.length = 0;
    };
    BaseFormlyComponent.prototype.ngAfterViewInit = function () {
    };
    // _model: any;
    BaseFormlyComponent.prototype.ngOnInit = function () {
        var _this = this;
        // console.log('model', this.model)
        // console.log('ket', this.key)
        var isFormlyMode = !!this.field;
        log.i("isFormlyMode: " + isFormlyMode);
        if (!isFormlyMode) {
            var that_1 = this;
            Object.defineProperty(this, 'field', {
                get: function () {
                    return that_1.__field;
                },
                set: function (v) {
                    that_1.__field = v;
                }
            });
        }
        var existed = this.ctrl;
        this.ctrl = new this.DualComponentController(this, isFormlyMode);
        // @ts-ignore
        Object.keys(existed).forEach(function (key) {
            _this.ctrl[key] = existed[key];
        });
        // if (!this.formControl) {
        //   this.formControl = new FormControl({})
        //   Object.defineProperty(this, 'field', {
        //     get: () => {
        //       return {
        //         formControl: this.formControl
        //       } as FormlyFieldConfig
        //     }
        //   })
        //   //   this.formControl = new FormControl({})
        // }
        this.change.next(this.ctrl.value);
    };
    tslib_1.__decorate([
        core_2.Input(),
        tslib_1.__metadata("design:type", Object)
    ], BaseFormlyComponent.prototype, "pizda", void 0);
    tslib_1.__decorate([
        core_2.Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], BaseFormlyComponent.prototype, "mode", null);
    tslib_1.__decorate([
        core_2.Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], BaseFormlyComponent.prototype, "disabled", void 0);
    tslib_1.__decorate([
        core_2.Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], BaseFormlyComponent.prototype, "required", void 0);
    tslib_1.__decorate([
        core_2.Input(),
        tslib_1.__metadata("design:type", String)
    ], BaseFormlyComponent.prototype, "label", void 0);
    tslib_1.__decorate([
        core_2.Input(),
        tslib_1.__metadata("design:type", String)
    ], BaseFormlyComponent.prototype, "placeholder", void 0);
    tslib_1.__decorate([
        core_2.Input(),
        tslib_1.__metadata("design:type", Object)
    ], BaseFormlyComponent.prototype, "defaultValue", void 0);
    tslib_1.__decorate([
        core_2.Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], BaseFormlyComponent.prototype, "model", null);
    tslib_1.__decorate([
        core_2.Input(),
        tslib_1.__metadata("design:type", String)
    ], BaseFormlyComponent.prototype, "path", void 0);
    tslib_1.__decorate([
        core_2.Output(),
        tslib_1.__metadata("design:type", Object)
    ], BaseFormlyComponent.prototype, "change", void 0);
    tslib_1.__decorate([
        core_2.Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], BaseFormlyComponent.prototype, "key", null);
    tslib_1.__decorate([
        core_2.Input(),
        tslib_1.__metadata("design:type", forms_1.FormControl)
    ], BaseFormlyComponent.prototype, "formControl", void 0);
    BaseFormlyComponent = tslib_1.__decorate([
        core_2.Component({
            selector: 'app-base-formly-component-meta',
            template: "<div></div>"
        })
    ], BaseFormlyComponent);
    return BaseFormlyComponent;
}(core_1.FieldType));
exports.BaseFormlyComponent = BaseFormlyComponent;
//# sourceMappingURL=base-formly-component.js.map
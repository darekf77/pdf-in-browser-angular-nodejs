export interface MetaMdJSONProject {
    githash?: string;
    isLinkFrom?: string;
}
export interface MetaMdJSON {
    orgFileBasename: string;
    projects: {
        [projPath: string]: MetaMdJSONProject;
    };
}
export declare class MetaMd {
    private readonly filePath;
    static readonly JSON_PART = "@jsonPart";
    static readonly FILE_CONTENT_PART = "@fileContentPart";
    static readonly TEST_PART = "@testPart";
    static create(json: MetaMdJSON, fileContent: String, testContent?: string): string;
    private get json();
    get readonlyMetaJson(): Readonly<MetaMdJSON>;
    get fileContent(): string;
    private get testContent();
    constructor(filePath: string);
    /**
     * recate original files before any unit/intergration test
     */
    recreateIn(cwd?: string): void;
}
export declare class MetaContentMd {
    preserveFile(originalAnyTypeFile: string, destinationFolder: string): void;
    instanceFrom(filePath: string): MetaMd;
    allInstancesFrom(folderPath: string): MetaMd[];
}

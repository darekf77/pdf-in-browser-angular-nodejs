"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tnp_core_1 = require("tnp-core");
var mocha_1 = require("mocha");
var chai_1 = require("chai");
var index_1 = require("../index");
// const instance = BrowserDB.instance;
var tempFilePath = tnp_core_1.crossPlatformPath(tnp_core_1.path.join(tnp_core_1.crossPlatformPath(process.cwd()), 'tmp-file-for-test.json5'));
var tempFilePath2 = tnp_core_1.crossPlatformPath(tnp_core_1.path.join(tnp_core_1.crossPlatformPath(process.cwd()), 'tmp-file-for-test2.json5'));
var first = 'world';
var second = 'poland';
var json5Test = "\n    {\n      // this is hello world\n      'hello': '" + first + "'\n    }\n    ";
var json5Test2 = "\n    {\n      // this is hello world\n      'hello': '" + second + "'\n    }\n    ";
mocha_1.describe('tnp-helpers json5', function () {
    mocha_1.beforeEach(function () {
        index_1.Helpers.removeFileIfExists(tempFilePath);
        first = 'world';
        second = 'poland';
        json5Test = "\n    {\n      // this is hello world\n      'hello': '" + first + "'\n    }\n    ";
        json5Test2 = "\n    {\n      // this is hello world\n      'hello': '" + second + "'\n    }\n    ";
    });
    mocha_1.it('Should properly hand instance, read and write of json 5', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var instanceJsont, inst2;
        return tslib_1.__generator(this, function (_a) {
            index_1.Helpers.writeFile(tempFilePath, json5Test);
            index_1.Helpers.writeFile(tempFilePath2, json5Test2);
            instanceJsont = index_1.Helpers.json5.fromFile(tempFilePath);
            chai_1.expect(instanceJsont.readOnlyData.hello).to.be.eq(first);
            instanceJsont.update({
                hello: second
            });
            instanceJsont.save();
            inst2 = index_1.Helpers.json5.fromFile(tempFilePath);
            chai_1.expect(inst2.readOnlyData.hello).to.be.eq(instanceJsont.readOnlyData.hello);
            return [2 /*return*/];
        });
    }); });
    mocha_1.it('Should not allow to modify readonly data', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var instanceJsont, errorDuringModify;
        return tslib_1.__generator(this, function (_a) {
            index_1.Helpers.writeFile(tempFilePath, json5Test);
            instanceJsont = index_1.Helpers.json5.fromFile(tempFilePath);
            errorDuringModify = false;
            try {
                instanceJsont.readOnlyData.hello = 'asd';
            }
            catch (error) {
                errorDuringModify = true;
            }
            chai_1.expect(errorDuringModify).to.be.true;
            return [2 /*return*/];
        });
    }); });
});
//# sourceMappingURL=tnp-helpers-json5.spec.js.map
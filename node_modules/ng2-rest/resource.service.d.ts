import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/takeUntil';
import 'rxjs/add/operator/take';
import 'rxjs/add/operator/toPromise';
import { Rest } from './rest.class';
import { RestHeaders } from './rest-headers';
import { Cookie } from './cookie';
import { Mapping } from './mapping';
import { Models } from './models';
import { Circ } from 'json10';
export declare class Resource<E, T, TA> {
    static DEFAULT_HEADERS: RestHeaders;
    private static _listenErrors;
    static get listenErrors(): Observable<Models.BackendError>;
    static enableWarnings: boolean;
    private getZone;
    static initAngularNgZone(zone: any): void;
    private checkNestedModels;
    private static instance;
    private static endpoints;
    static getModel(endpoint: string, model: string): Rest<any>;
    private static request;
    static create<A, TA = A[]>(e: string, model?: string, entityMapping?: Mapping.Mapping, circular?: Circ[]): Models.ResourceModel<A, TA>;
    static reset(): void;
    private constructor();
    static Cookies: Cookie;
    private static map;
    private static prepareModel;
    /**
     * And enipoint to application
     *
     * @param {E} endpoint
     * @param {string} model
     * @returns {boolean}
     */
    private add;
    /**
     * Access api throught endpoint
     *
     * @param {E} endpoint
     * @param {string} model
     * @returns {Rest<T, TA>}
     */
    private api;
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Observable_1 = require("rxjs/Observable");
require("rxjs/add/operator/map");
require("rxjs/add/operator/takeUntil");
require("rxjs/add/operator/take");
require("rxjs/add/operator/toPromise");
var resource_service_1 = require("./resource.service");
/**
 *
 * @export
 * @abstract
 * @class SimpleResource
 * @extends {Resource<T, A, TA>}
 * @template E  Endpoint type
 * @template A Single modle type
 * @template TA Array Model Type
 * @template RP rest url parameters type
 * @template QP query parameter type
 */
var ExtendedResource = /** @class */ (function () {
    // add(endpoint: E, model: string, group?: string, name?: string, description?: string) { }
    function ExtendedResource(endpoint, path_model) {
        var _this = this;
        this.endpoint = endpoint;
        this.path_model = path_model;
        /**
         * Get model by rest params
        */
        this.model = function (restParams) {
            return {
                get: function (queryPrams) {
                    return Observable_1.Observable.create(function (observer) {
                        ExtendedResource.handlers.push(_this.rest.model(restParams)
                            .get([queryPrams], ExtendedResource.doNotSerializeQueryParams)
                            .observable
                            .subscribe(function (data) { return observer.next(data.body.json); }, function (err) { return observer.error(err); }, function () { return observer.complete(); }));
                    });
                },
                patch: function (item, queryParams) {
                    return Observable_1.Observable.create(function (observer) {
                        ExtendedResource.handlers.push(_this.rest.model(restParams)
                            .put(item, [queryParams], ExtendedResource.doNotSerializeQueryParams)
                            .observable
                            .subscribe(function (data) { return observer.next(data.body.json); }, function (err) { return observer.error(err); }, function () { return observer.complete(); }));
                    });
                },
                head: function (queryPrams) {
                    return Observable_1.Observable.create(function (observer) {
                        ExtendedResource.handlers.push(_this.rest.model(restParams)
                            .head([queryPrams], ExtendedResource.doNotSerializeQueryParams)
                            .observable
                            .subscribe(function (data) { return observer.next(data.body.json); }, function (err) { return observer.error(err); }, function () { return observer.complete(); }));
                    });
                },
                query: function (queryPrams) {
                    return Observable_1.Observable.create(function (observer) {
                        ExtendedResource.handlers.push(_this.rest.model(restParams).
                            array
                            .get([queryPrams], ExtendedResource.doNotSerializeQueryParams)
                            .observable
                            .subscribe(function (data) { return observer.next(data.body.json); }, function (err) { return observer.error(err); }, function () { return observer.complete(); }));
                    });
                },
                post: function (item, queryParams) {
                    return Observable_1.Observable.create(function (observer) {
                        ExtendedResource.handlers.push(_this.rest.model(restParams)
                            .post(item, [queryParams], ExtendedResource.doNotSerializeQueryParams)
                            .observable
                            .subscribe(function (data) { return observer.next(data.body.json); }, function (err) { return observer.error(err); }, function () { return observer.complete(); }));
                    });
                },
                put: function (item, queryParams) {
                    return Observable_1.Observable.create(function (observer) {
                        ExtendedResource.handlers.push(_this.rest.model(restParams)
                            .put(item, [queryParams], ExtendedResource.doNotSerializeQueryParams)
                            .observable
                            .subscribe(function (data) { return observer.next(data.body.json); }, function (err) { return observer.error(err); }, function () { return observer.complete(); }));
                    });
                },
                delete: function (queryPrams) {
                    return Observable_1.Observable.create(function (observer) {
                        ExtendedResource.handlers.push(_this.rest.model(restParams)
                            .delete([queryPrams], ExtendedResource.doNotSerializeQueryParams)
                            .observable
                            .subscribe(function (data) { return observer.next(data.body.json); }, function (err) { return observer.error(err); }, function () { return observer.complete(); }));
                    });
                }
            };
        };
        this.rest = resource_service_1.Resource.create(endpoint, path_model);
    }
    ExtendedResource.doNotSerializeQueryParams = false;
    ExtendedResource.handlers = [];
    return ExtendedResource;
}());
/**
 *
 * @export
 * @class SimpleResource
 * @template A single model type
 * @template TA array model type
 * @template RP rest parameters type
 * @template QP query parameters type
 */
var SimpleResource = /** @class */ (function () {
    function SimpleResource(endpoint, model) {
        var rest = new ExtendedResource(endpoint, model);
        this.model = rest.model;
    }
    Object.defineProperty(SimpleResource, "doNotSerializeQueryParams", {
        set: function (value) {
            if (!SimpleResource._isSetQueryParamsSerialization) {
                SimpleResource._isSetQueryParamsSerialization = true;
                ExtendedResource.doNotSerializeQueryParams = value;
                return;
            }
            console.warn("Query params serialization already set as\n        " + ExtendedResource.doNotSerializeQueryParams + ",");
        },
        enumerable: true,
        configurable: true
    });
    SimpleResource.__destroy = function () {
        ExtendedResource.handlers.forEach(function (h) { return h.unsubscribe(); });
    };
    SimpleResource._isSetQueryParamsSerialization = false;
    return SimpleResource;
}());
exports.SimpleResource = SimpleResource;
//# sourceMappingURL=simple-resource.js.map
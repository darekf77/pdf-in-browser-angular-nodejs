"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var mocha_1 = require("mocha");
var chai_1 = require("chai");
var typescript_class_helpers_1 = require("typescript-class-helpers");
// import { BrowserDB } from '../browser-db/browser-db';
var mapping_1 = require("../mapping");
var ng2_logger_1 = require("ng2-logger");
var log = ng2_logger_1.Log.create('mapping test');
// const instance = BrowserDB.instance;
mocha_1.describe('Mapping inheritance', function () {
    // @CLASS.NAME('Coffee')
    var Coffee = /** @class */ (function () {
        function Coffee() {
        }
        return Coffee;
    }());
    // @CLASS.NAME('Project')
    var Project = /** @class */ (function () {
        function Project() {
        }
        Project = tslib_1.__decorate([
            mapping_1.Mapping.DefaultModelWithMapping(void 0, {
                cup: 'Coffee',
                projectInside: 'Project'
            })
        ], Project);
        return Project;
    }());
    var PROJECT = /** @class */ (function (_super) {
        tslib_1.__extends(PROJECT, _super);
        function PROJECT() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        PROJECT = tslib_1.__decorate([
            typescript_class_helpers_1.CLASS.NAME('PROJECT'),
            mapping_1.Mapping.DefaultModelWithMapping(void 0, {
                mycups: ['Coffee']
            })
        ], PROJECT);
        return PROJECT;
    }(Project));
    var SubProject = /** @class */ (function (_super) {
        tslib_1.__extends(SubProject, _super);
        function SubProject() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SubProject;
    }(PROJECT));
    var SubSubProject = /** @class */ (function (_super) {
        tslib_1.__extends(SubSubProject, _super);
        function SubSubProject() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SubSubProject;
    }(PROJECT));
    mocha_1.it('Should handle inheritance of mapping', function () {
        chai_1.expect(mapping_1.Mapping.getModelsMapping(PROJECT)).
            to.deep.eq({ '': 'PROJECT', mycups: ['Coffee'], cup: 'Coffee', projectInside: 'PROJECT' });
        chai_1.expect(mapping_1.Mapping.getModelsMapping(SubProject)).
            to.deep.eq({ '': 'PROJECT', mycups: ['Coffee'], cup: 'Coffee', projectInside: 'PROJECT' });
        chai_1.expect(mapping_1.Mapping.getModelsMapping(SubSubProject)).
            to.deep.eq({ '': 'PROJECT', mycups: ['Coffee'], cup: 'Coffee', projectInside: 'PROJECT' });
        chai_1.expect(mapping_1.Mapping.getModelsMapping(Project)).
            to.deep.eq({ '': 'Project', cup: 'Coffee', projectInside: 'Project' });
    });
});
//# sourceMappingURL=mapping-inheritance.spec.js.map
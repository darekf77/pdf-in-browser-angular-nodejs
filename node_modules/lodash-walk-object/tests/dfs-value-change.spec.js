"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tnp_core_1 = require("tnp-core");
var mocha_1 = require("mocha");
var chai_1 = require("chai");
var index_1 = require("../index");
// const instance = BrowserDB.instance;
var ng2_logger_1 = require("ng2-logger");
var log = ng2_logger_1.Log.create('value change tests');
mocha_1.describe('DFS Walk.Object value change', function () {
    mocha_1.it('DFS should iterate new object', function () {
        var a = {
            b: {
                b_value1: 'b_value1',
                b_value2: 'b_value2',
            }
        };
        var actualPathes = [];
        index_1.Helpers.Walk.Object(a, function (value, lodashPath, change, _a) {
            actualPathes.push(lodashPath);
            if (lodashPath === 'b') {
                change({
                    c_value1: 'c_value1',
                    c_value2: 'c_value2',
                });
            }
        });
        // console.log(actualPathes)
        chai_1.expect(actualPathes).to.be.deep.eq(['b', 'b.c_value1', 'b.c_value2']);
    });
    mocha_1.it('DFS should iterate new object array', function () {
        var a = {
            b: [
                'b_value1',
                'b_value2',
            ]
        };
        var actualPathes = [];
        index_1.Helpers.Walk.Object(a, function (value, lodashPath, change, _a) {
            actualPathes.push(lodashPath);
            if (lodashPath === 'b') {
                change([
                    { c1: 'c1' },
                    { c2: 'c2' }
                ]);
            }
        });
        // console.log(actualPathes)
        chai_1.expect(actualPathes).to.be.deep.eq(['b', 'b[0]', 'b[0].c1', 'b[1]', 'b[1].c2']);
    });
    mocha_1.it('Should change deep value', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var obj;
        return tslib_1.__generator(this, function (_a) {
            obj = {
                Address: {
                    properties: {
                        user: {
                            $ref: 12
                        }
                    }
                }
            };
            index_1.Helpers.Walk.Object(obj, function (value, lodashPath, changeValue) {
                // console.log(lodashPath)
                if (lodashPath.endsWith('$ref')) {
                    changeValue(13);
                }
            });
            // console.log('obj',obj)
            chai_1.expect(obj['Address.properties.user.$ref']).to.be.undefined;
            chai_1.expect(obj.Address.properties.user.$ref).to.be.eq(13);
            return [2 /*return*/];
        });
    }); });
    mocha_1.it('Should change value in object', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var d, result;
        return tslib_1.__generator(this, function (_a) {
            d = {
                a: {
                    c: 23
                },
                super: 'amazing',
                names: [
                    {
                        name: 'Dariusz'
                    }
                ]
            };
            result = 'amzing2';
            index_1.Helpers.Walk.Object(d, function (v, lodashPath, changeValue) {
                // console.log('lodashPath',lodashPath)
                if (lodashPath === 'super') {
                    changeValue(result);
                }
                // console.log(`Path: "${lodashPath}" `, v)
            });
            // console.log(d)
            chai_1.expect(d.super).to.eq(result);
            return [2 /*return*/];
        });
    }); });
    mocha_1.it('Should change value in object second level', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var d, result;
        return tslib_1.__generator(this, function (_a) {
            d = {
                a: {
                    c: 23
                },
                super: 'amazing',
                names: [
                    {
                        name: 'Dariusz'
                    }
                ]
            };
            result = 'amzing2';
            index_1.Helpers.Walk.Object(d, function (v, lodashPath, changeValue) {
                // console.log('lodashPath',lodashPath)
                if (lodashPath === 'a.c') {
                    changeValue(result);
                }
                // console.log(`Path: "${lodashPath}" `, v)
            });
            // console.log(d)
            chai_1.expect(d.a.c).to.eq(result);
            return [2 /*return*/];
        });
    }); });
    mocha_1.it('Should change value in array', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var d, result;
        return tslib_1.__generator(this, function (_a) {
            d = {
                a: {
                    c: 23
                },
                super: 'amazing',
                names: [
                    {
                        name: 'Dariusz'
                    }
                ]
            };
            result = 'amzing2';
            index_1.Helpers.Walk.Object(d, function (v, lodashPath, changeValue) {
                // console.log('lodashPath',lodashPath)
                if (lodashPath === 'names[0].name') {
                    changeValue(result);
                }
                // console.log(`Path: "${lodashPath}" `, v)
            });
            // console.log(d)
            chai_1.expect(d.names[0].name).to.eq(result);
            return [2 /*return*/];
        });
    }); });
    mocha_1.it('Should change whole object', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var d, context, replacement;
        return tslib_1.__generator(this, function (_a) {
            d = {
                a: {
                    c: 23
                },
                super: 'amazing',
                names: [
                    {
                        name: 'Dariusz'
                    }
                ]
            };
            context = {
                d: d
            };
            replacement = {
                test: 'super'
            };
            index_1.Helpers.Walk.ObjectBy('d', context, function (v, lodashPath, changeValue) {
                // console.log('lodashPath',lodashPath)
                if (lodashPath === '') {
                    changeValue(replacement);
                }
                // console.log(`Path: "${lodashPath}" `, v)
            });
            // console.log(d)
            chai_1.expect(context.d).to.deep.eq(replacement);
            return [2 /*return*/];
        });
    }); });
    mocha_1.it('Should change whole object from context', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var d, context, result;
        return tslib_1.__generator(this, function (_a) {
            d = {
                a: {
                    c: 23
                },
                super: 'amazing',
                names: [
                    {
                        name: 'Dariusz'
                    }
                ]
            };
            context = {
                d: d
            };
            result = 'amzing2';
            index_1.Helpers.Walk.ObjectBy('d', context, function (v, lodashPath, changeValue) {
                // console.log('lodashPath',lodashPath)
                if (lodashPath === 'a.c') {
                    changeValue(result);
                }
                // console.log(`Path: "${lodashPath}" `, v)
            });
            // console.log(d)
            chai_1.expect(context.d.a.c).to.eq(result);
            return [2 /*return*/];
        });
    }); });
    mocha_1.it('Should handle weird pathes', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var d, result, weirdPath, context;
        return tslib_1.__generator(this, function (_a) {
            d = {};
            result = 'amzing2';
            weirdPath = 'dependencies.@angular-devkit/build-optimizer';
            tnp_core_1._.set(d, weirdPath, 'hellow');
            context = {
                d: d
            };
            index_1.Helpers.Walk.ObjectBy('d', context, function (v, lodashPath, changeValue) {
                // console.log('lodashPath',lodashPath)
                if (lodashPath === weirdPath) {
                    changeValue(result);
                }
                // console.log(`Path: "${lodashPath}" `, v)
            });
            // log.i('d', d)
            chai_1.expect(tnp_core_1._.get(d, weirdPath)).to.eq(result);
            chai_1.expect(Object.keys(d).length).to.be.eq(1);
            return [2 /*return*/];
        });
    }); });
});
//# sourceMappingURL=dfs-value-change.spec.js.map
export declare namespace Models {
    type InDBType = {
        target: any;
        path: string;
    };
    type Circ = {
        pathToObj: string;
        circuralTargetPath: string;
    };
    type Ver = {
        v: any;
        p: string;
        parent: Ver;
        isGetter?: boolean;
    };
    interface StartIteratorOptions {
        walkGetters?: boolean;
        /**
         * Default in breadhTwalk
         */
        checkCircural?: boolean;
        breadthWalk?: boolean;
        include?: string[];
        exclude?: string[];
    }
    interface AdditionalIteratorOptions extends StartIteratorOptions {
        skipObject?: () => void;
        isGetter?: boolean;
        /**
         * Breadth walk will skip content of circural objects
         */
        isCircural?: boolean;
        exit?: () => void;
    }
    interface InternalValues extends AdditionalIteratorOptions {
        db?: any;
        stack?: any[];
        circural?: Circ[];
        hasIterator?: boolean;
        _valueChanged: boolean;
        _skip: boolean;
        _exit: boolean;
    }
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var path = require("path");
var mocha_1 = require("mocha");
var chai_1 = require("chai");
var typescript_class_helpers_1 = require("typescript-class-helpers");
var tnp_helpers_1 = require("tnp-helpers");
var node_cli_tester_1 = require("node-cli-tester");
var project_backend_1 = require("../../../project.backend");
var COPY_backend_1 = require("../../../scripts/COPY.backend");
var morphi_1 = require("morphi");
mocha_1.describe('copying import / export path', function () {
    // PUT ALL YOUR TESTS HERE
    mocha_1.it('should works example unit test', function () {
        // const testName = this.test.title;
        // const testFullName = this.test.fullTitle();
        chai_1.expect(1).to.be.gt(0);
    });
    mocha_1.describe('czh-ui', function () {
        var cwdHash = 'kn49xt7i';
        mocha_1.it('Should pass the test with hash ' + cwdHash // chalk.hidden(cwdHash)
        , function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
            var projFolder, tmpTestEnvironmentFolder, cwd, basePart, relativePathToFile, absolutePathToTestFile, $Project, proj, paste, importString;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        projFolder = 'czh-ui';
                        tmpTestEnvironmentFolder = 'tmp-tests-environments';
                        cwd = path.resolve(path.join(__dirname, "../../../../" + tmpTestEnvironmentFolder, cwdHash));
                        basePart = "es-rs-ui/src/rs-locations/components/rs-location-terminals-edit-page/rs-location-terminals-threshold-edit/rs-location-terminals-threshold-edit-decorators.module.ts";
                        relativePathToFile = {
                            rsLocationTerminalsThresholdEditDecoratorsModuleTs: "custom/" + basePart
                        };
                        absolutePathToTestFile = {
                            rsLocationTerminalsThresholdEditDecoratorsModuleTs: path.join(cwd, projFolder, relativePathToFile.rsLocationTerminalsThresholdEditDecoratorsModuleTs)
                        };
                        return [4 /*yield*/, node_cli_tester_1.NodeCliTester.InstanceNearestTo(cwd).regenerateEnvironment(cwdHash, tmpTestEnvironmentFolder)];
                    case 1:
                        _a.sent();
                        $Project = project_backend_1.Project || typescript_class_helpers_1.CLASS.getBy('Project');
                        proj = $Project.From(path.join(cwd, projFolder));
                        //#endregion
                        return [4 /*yield*/, tnp_helpers_1.Helpers.changeCwdWrapper(proj.location, function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
                                return tslib_1.__generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0: return [4 /*yield*/, COPY_backend_1.COPY_AS_IMPORT([absolutePathToTestFile.rsLocationTerminalsThresholdEditDecoratorsModuleTs], false)];
                                        case 1:
                                            _a.sent();
                                            return [2 /*return*/];
                                    }
                                });
                            }); }, morphi_1.Level.DATA)];
                    case 2:
                        //#endregion
                        _a.sent();
                        return [4 /*yield*/, tnp_helpers_1.Helpers.terminal.pasteText()];
                    case 3:
                        paste = _a.sent();
                        importString = "import rsLocationTerminalsThresholdEditDecoratorsModule from '" + basePart.replace(/\.ts$/, '') + "';";
                        chai_1.expect(paste).to.be.eq(importString);
                        return [2 /*return*/];
                }
            });
        }); });
    });
});
//# sourceMappingURL=copying-import-export-path.spec.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var path = require("path");
var mocha_1 = require("mocha");
var chai_1 = require("chai");
var typescript_class_helpers_1 = require("typescript-class-helpers");
var tnp_helpers_1 = require("tnp-helpers");
var node_cli_tester_1 = require("node-cli-tester");
var project_backend_1 = require("../../../project.backend");
var tnp_config_1 = require("tnp-config");
var DECORATE_backend_1 = require("../../../scripts/DECORATE.backend");
mocha_1.describe('decorate ng module in navigator 1.6 baseline module', function () {
    // PUT ALL YOUR TESTS HERE
    mocha_1.it('should works example unit test', function () {
        // const testName = this.test.title;
        // const testFullName = this.test.fullTitle();
        chai_1.expect(1).to.be.gt(0);
    });
    mocha_1.describe('nes-ui/external/NES-es-rs-ui', function () {
        var cwdHash = 'kn3f02jn';
        mocha_1.it('Should pass the test with hash ' + cwdHash // chalk.hidden(cwdHash)
        , function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
            var projFolder, tmpTestEnvironmentFolder, cwd, relativePathToFile, absolutePathToTestFile, $Project, projBase, proj, destinatinonPath;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        projFolder = 'nes-ui';
                        tmpTestEnvironmentFolder = 'tmp-tests-environments';
                        cwd = path.resolve(path.join(__dirname, "../../../../" + tmpTestEnvironmentFolder, cwdHash));
                        relativePathToFile = {
                            rsDocumentFormComponentTs: "external/NES-es-rs-ui/src/rs-documents/components/rs-documents-form/rs-document-form-component.ts"
                        };
                        absolutePathToTestFile = {
                            rsDocumentFormComponentTs: path.join(cwd, projFolder, relativePathToFile.rsDocumentFormComponentTs)
                        };
                        return [4 /*yield*/, node_cli_tester_1.NodeCliTester.InstanceNearestTo(cwd).regenerateEnvironment(cwdHash, tmpTestEnvironmentFolder)];
                    case 1:
                        _a.sent();
                        $Project = project_backend_1.Project || typescript_class_helpers_1.CLASS.getBy('Project');
                        projBase = $Project.From(path.join(cwd, projFolder));
                        proj = $Project.From(path.join(cwd, projFolder, 'external/NES-es-rs-ui'));
                        //#endregion
                        return [4 /*yield*/, tnp_helpers_1.Helpers.changeCwdWrapper(proj.location, function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
                                return tslib_1.__generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0: return [4 /*yield*/, DECORATE_backend_1.DECORATE(['src/rs-documents/components/rs-documents-form/rs-document-form-component.ts'], false)];
                                        case 1:
                                            _a.sent();
                                            return [2 /*return*/];
                                    }
                                });
                            }); })];
                    case 2:
                        //#endregion
                        _a.sent();
                        destinatinonPath = path.join(projBase.location, tnp_config_1.config.folder.custom, "/es-rs-ui/src/rs-documents/components/rs-documents-form/rs-document-form-component-decorator.ts");
                        // console.log(`destinatinonPath: ${destinatinonPath}`)
                        chai_1.expect(tnp_helpers_1.Helpers.exists(destinatinonPath)).to.be.true;
                        return [2 /*return*/];
                }
            });
        }); });
    });
});
//# sourceMappingURL=decorate-ng-module-in-navigator-1-6-baseline-module.spec.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenTsService = void 0;
var tslib_1 = require("tslib");
var base_generators_backend_1 = require("./base-generators.backend");
var GenTsService = /** @class */ (function (_super) {
    tslib_1.__extends(GenTsService, _super);
    function GenTsService() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GenTsService.prototype.init = function () {
        _super.prototype.init.call(this);
        this.className = this.className + "Service";
        if (this.isDecorator) {
        }
        else {
            this.outputFileName = this.outputFileName + ".service";
        }
    };
    Object.defineProperty(GenTsService.prototype, "template", {
        get: function () {
            return "\nimport { Injectable, $Inject } from 'es-common/src/decorators';\n" + this.decoratorImport + "\n\n@Injectable(" + (this.isDecorator ? 'Base' : this.className) + ".name)\n@$Inject([]" + this.injectAppend + ")\nexport class " + this.className + (this.isDecorator ? 'Decorator' : '') + " " + (this.isDecorator ? " extends Base" : '') + " {\n\n\n  constructor(" + (this.isDecorator ? '...args' : '') + ") {\n    " + (this.isDecorator ? "\n    // @ts-ignore\n    super(...args)\n    " : '') + "\n  }\n\n}\n\n";
        },
        enumerable: false,
        configurable: true
    });
    return GenTsService;
}(base_generators_backend_1.FilesGenerator));
exports.GenTsService = GenTsService;
//# sourceMappingURL=gen-ts-service.backend.js.map
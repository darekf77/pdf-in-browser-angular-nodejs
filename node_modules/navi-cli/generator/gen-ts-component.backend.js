"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenTsComponnet = void 0;
var tslib_1 = require("tslib");
var base_generators_backend_1 = require("./base-generators.backend");
var tnp_core_1 = require("tnp-core");
var GenTsComponnet = /** @class */ (function (_super) {
    tslib_1.__extends(GenTsComponnet, _super);
    function GenTsComponnet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GenTsComponnet.prototype.init = function () {
        _super.prototype.init.call(this);
        this.className = this.className + "Component";
        this.componentSelector = tnp_core_1._.kebabCase(this.contextFolderName) + "-component";
        if (this.isDecorator) {
        }
        else {
            this.outputFileName = this.outputFileName + ".component";
        }
    };
    Object.defineProperty(GenTsComponnet.prototype, "detectedServices", {
        /**
         * Gen names of detected servicecs
         */
        get: function () {
            return this.getFiles(this.surfixesServices);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GenTsComponnet.prototype, "templateDetectedServicesInject", {
        get: function () {
            return ('\n@$Inject([' +
                this.detectedServices
                    .map(function (s) { return tnp_core_1._.upperFirst(tnp_core_1._.camelCase(s.replace('.ts', ''))); })
                    .map(function (s) { return s + ".name"; })
                    .join(',') +
                ("]" + this.injectAppend + ")"));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GenTsComponnet.prototype, "templateDetectedServicesConstructor", {
        get: function () {
            return this.detectedServices.length === 0 ? '' :
                ('\n' +
                    this.detectedServices
                        .map(function (s) {
                        var res = tnp_core_1._.camelCase(s.replace('.ts', ''));
                        return res;
                    })
                        .map(function (s) { return "\t\tpublic " + tnp_core_1._.lowerFirst(s) + ":" + tnp_core_1._.upperFirst(s); })
                        .join(',')) +
                    '\n';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GenTsComponnet.prototype, "templateDetectedServicesImports", {
        get: function () {
            return this.templateImport(this.surfixesServices);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GenTsComponnet.prototype, "htmlTemplateName", {
        get: function () {
            return this.isDecorator ? tnp_core_1.path.join(tnp_core_1.path.dirname(this.decoratorModuleFilePath), tnp_core_1.path.basename(tnp_core_1.path.dirname(this.decoratorModuleFilePath))).replace(/^\\/, '').replace(/\\/g, '/') + ".html" :
                "./" + tnp_core_1.path.basename(this.outputFileLocation).replace('.component.ts', '.html');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GenTsComponnet.prototype, "selector", {
        get: function () {
            return this.isDecorator ? '' : "selector: '" + this.componentSelector + "',";
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GenTsComponnet.prototype, "template", {
        get: function () {
            return "\nimport {\n  $Inject,\n  Component, HostListener,\n  Input, Output,\n  OnInit, OnDestroy, AfterViewInit, OnChanges,\n  ViewChild, ViewChildren, ViewParent, ElementRef,\n  SimpleChange, SimpleChanges\n} from 'es-common/src/decorators';\n\n// @ts-ignore\nimport * as template from '" + this.htmlTemplateName + "';\n\n" + this.templateDetectedServicesImports + "\n" + this.decoratorImport + "\n\n@Component({\n  " + this.selector + "\n  template\n})" + this.templateDetectedServicesInject + "\nexport class " + this.className + (this.isDecorator ? "Decorator extends Base" : '') + " {\n\n  constructor(" + (this.isDecorator ? '...args' : this.templateDetectedServicesConstructor) + ") {\n    " + (this.isDecorator ? "\n    // @ts-ignore\n    super(...args)\n    " : '') + "\n  }\n\n}\n\n";
        },
        enumerable: false,
        configurable: true
    });
    GenTsComponnet.prototype.save = function () {
        _super.prototype.save.call(this);
        if (!this.isDecorator) {
            var htmlTemplateLocation = this.outputFileLocation.replace('.component.ts', '.html');
            if (!tnp_core_1.fse.existsSync(htmlTemplateLocation)) {
                _super.prototype.save.call(this, htmlTemplateLocation, "\n      <h1>" + this.htmlTemplateName.replace('.html', '.component.ts') + " works !</h1>\n          ");
            }
            var lessStyleLocation = this.outputFileLocation.replace('.component.ts', '.less');
            if (!tnp_core_1.fse.existsSync(lessStyleLocation)) {
                _super.prototype.save.call(this, lessStyleLocation, '');
            }
        }
    };
    return GenTsComponnet;
}(base_generators_backend_1.FilesGenerator));
exports.GenTsComponnet = GenTsComponnet;
//# sourceMappingURL=gen-ts-component.backend.js.map
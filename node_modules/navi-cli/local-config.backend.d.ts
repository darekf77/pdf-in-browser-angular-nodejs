import { Project } from './project.backend';
import { Tools } from './tools.backend';
export declare class LocalConfig {
    private project;
    constructor(project: Project);
    get keyInDb(): {
        readonly localConfigJsHash: string;
        possibleServersToUpdate(date: Date): string;
        readonly lastServersForProject: string;
    };
    get allTempLocalConfigs(): string[];
    save(servesConfigOrReplayProxyPort?: Tools.ServerWitHostName | number, isLast?: boolean): Promise<void>;
    update(): Promise<void>;
    getLastServers(): Promise<Tools.MetadataType>;
    setLastServers(servers: Tools.MetadataType): Promise<void>;
    private generatedLocalConfigWasModified;
}
export declare function getLocalConfigBy(project: Project, hostWithDefault: Tools.MetadataType): string;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OVERRIDE = exports.DECORATE = void 0;
var tslib_1 = require("tslib");
var _ = require("lodash");
var path = require("path");
var project_backend_1 = require("../project.backend");
var tnp_helpers_1 = require("tnp-helpers");
var tools_backend_1 = require("../tools.backend");
function decorationProcess(files, fnName, exit) {
    if (exit === void 0) { exit = true; }
    var relativePathOrg = _.first(files);
    var relativeFilePath = relativePathOrg;
    var startSearchFrom = path.join(process.cwd(), relativeFilePath);
    var project = project_backend_1.Project.nearestTo(startSearchFrom);
    if (!project) {
        project = project_backend_1.Project.nearestTo(relativeFilePath);
    }
    if (relativeFilePath.startsWith('external')) {
        relativeFilePath = relativeFilePath.split('/').slice(2).join('/');
    }
    if (!project) {
        startSearchFrom = path.join(process.cwd(), relativeFilePath);
        project = project_backend_1.Project.nearestTo(startSearchFrom);
    }
    if (!project) {
        tnp_helpers_1.Helpers.error("This folder doesn't contain navigator project:\n    relative path: " + relativeFilePath + "\n    cwd: " + process.cwd() + "\n\n    ", false, true);
    }
    if (project.projectType !== 'child-module') {
        tnp_helpers_1.Helpers.error("This project is not a navigator site module. " +
            ("Please use 'navi " + fnName + " <filenames>' only inside projects with names:") +
            tools_backend_1.Tools.ModulesForDecorationArr.join(','), false, true);
    }
    if (fnName === 'decorate') {
        project.decorate([relativeFilePath]);
    }
    if (fnName === 'override') {
        project.override([relativeFilePath]);
    }
    if (exit) {
        process.exit(0);
    }
}
function DECORATE(files, exit) {
    if (exit === void 0) { exit = true; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            decorationProcess(files, 'decorate', exit);
            return [2 /*return*/];
        });
    });
}
exports.DECORATE = DECORATE;
function OVERRIDE(files, exit) {
    if (exit === void 0) { exit = true; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            decorationProcess(files, 'override', exit);
            return [2 /*return*/];
        });
    });
}
exports.OVERRIDE = OVERRIDE;
exports.default = {
    DECORATE: function (args) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, DECORATE(args)];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    }); },
    OVERRIDE: function (args) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, OVERRIDE(args)];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    }); }
};
//# sourceMappingURL=DECORATE.backend.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NaviCliTester = exports.TestTemplates = void 0;
var tslib_1 = require("tslib");
var tnp_helpers_1 = require("tnp-helpers");
var node_cli_tester_1 = require("node-cli-tester");
var navi_cli_1 = require("../navi-cli");
var project_backend_1 = require("../project.backend");
var typescript_class_helpers_1 = require("typescript-class-helpers");
var TestTemplates = /** @class */ (function (_super) {
    tslib_1.__extends(TestTemplates, _super);
    function TestTemplates() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TestTemplates.DEFAULT_COMMAND = 'navi helloworld';
    TestTemplates.PROJECT_ENTITY_LOCATION = '../../../project.backend';
    TestTemplates = tslib_1.__decorate([
        typescript_class_helpers_1.CLASS.NAME('TestTemplates')
    ], TestTemplates);
    return TestTemplates;
}(node_cli_tester_1.TestTemplates));
exports.TestTemplates = TestTemplates;
// @ts-ignore
var NaviCliTester = /** @class */ (function (_super) {
    tslib_1.__extends(NaviCliTester, _super);
    function NaviCliTester() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NaviCliTester.classFn = NaviCliTester;
    NaviCliTester.projectClassFn = project_backend_1.Project;
    NaviCliTester.foundProjectsFn = function (pProjects) {
        var projects = pProjects.map(function (p) { return project_backend_1.Project.From(p.location); });
        var result = projects.reduce(function (a, b) {
            return tslib_1.__spreadArray(tslib_1.__spreadArray(tslib_1.__spreadArray([], a), [
                b
            ]), (b.projectType === 'child-module' ?
                [b.parent]
                : []));
        }, []);
        return result;
    };
    return NaviCliTester;
}(node_cli_tester_1.NodeCliTester));
exports.NaviCliTester = NaviCliTester;
exports.default = {
    TEST: function (args) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                console.log('TEST');
                return [2 /*return*/];
            });
        });
    },
    TESTER: function (args) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, node_cli_tester_1.run(args, NaviCliTester.Instance(navi_cli_1.NaviCli.Instance.location))];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    },
    TEST_SLEEP: function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var index;
            return tslib_1.__generator(this, function (_a) {
                for (index = 1; index < 10; index++) {
                    console.log("Wait " + index + " seconds....");
                    tnp_helpers_1.Helpers.sleep(index);
                }
                return [2 /*return*/];
            });
        });
    }
};
//# sourceMappingURL=TEST.backend.js.map
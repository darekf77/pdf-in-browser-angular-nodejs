"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.INIT = void 0;
var tslib_1 = require("tslib");
var _ = require("lodash");
var LINK_backend_1 = require("./LINK.backend");
var CLONE_backend_1 = require("./CLONE.backend");
var project_backend_1 = require("../project.backend");
var tnp_helpers_1 = require("tnp-helpers");
var tools_backend_1 = require("../tools.backend");
var current_projects_and_servers_backend_1 = require("../current-projects-and-servers.backend");
function INIT(args, exit) {
    if (exit === void 0) { exit = true; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var _loop_1, index;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!(_.isArray(args) && args.length > 0)) return [3 /*break*/, 5];
                    _loop_1 = function (index) {
                        var navigatorProject;
                        return tslib_1.__generator(this, function (_b) {
                            switch (_b.label) {
                                case 0:
                                    navigatorProject = args[index].trim();
                                    navigatorProject = tools_backend_1.Tools.moduleFix(navigatorProject);
                                    if (!tools_backend_1.Tools.ModulesForDecorationArr.includes(navigatorProject)) return [3 /*break*/, 2];
                                    return [4 /*yield*/, LINK_backend_1.LINK([navigatorProject], false)];
                                case 1:
                                    _b.sent();
                                    return [3 /*break*/, 5];
                                case 2:
                                    if (!!!current_projects_and_servers_backend_1.NavigatorBaselineForks.find(function (f) { return f.name === navigatorProject; })) return [3 /*break*/, 4];
                                    return [4 /*yield*/, CLONE_backend_1.CLONE([navigatorProject], false)];
                                case 3:
                                    _b.sent();
                                    return [3 /*break*/, 5];
                                case 4:
                                    tnp_helpers_1.Helpers.error("This is not module or baseline-fork name: " + navigatorProject, false, true);
                                    _b.label = 5;
                                case 5: return [2 /*return*/];
                            }
                        });
                    };
                    index = 0;
                    _a.label = 1;
                case 1:
                    if (!(index < args.length)) return [3 /*break*/, 4];
                    return [5 /*yield**/, _loop_1(index)];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    index++;
                    return [3 /*break*/, 1];
                case 4: return [3 /*break*/, 7];
                case 5: return [4 /*yield*/, project_backend_1.Project.Current.init()];
                case 6:
                    _a.sent();
                    _a.label = 7;
                case 7:
                    if (exit) {
                        process.exit(0);
                    }
                    return [2 /*return*/];
            }
        });
    });
}
exports.INIT = INIT;
function INIT_ALL(args) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, project_backend_1.Project.Current.submodules.cloneAll()];
                case 1:
                    _a.sent();
                    process.exit(0);
                    return [2 /*return*/];
            }
        });
    });
}
exports.default = {
    INIT: INIT,
    INIT_ALL: INIT_ALL
};
//# sourceMappingURL=INIT.backend.js.map
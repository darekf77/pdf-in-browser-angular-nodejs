"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GET_LOCATION = exports.FORCE_AUTOUPDATE = exports.AUTOUPDATE_FORCE = exports.AUTOUPDATE = void 0;
var tslib_1 = require("tslib");
var autoupdate_backend_1 = require("../features/autoupdate.backend");
var VSCODE_backend_1 = require("./VSCODE.backend");
var tnp_models_1 = require("tnp-models");
var navi_cli_1 = require("../navi-cli");
function AUTOUPDATE(args, exit) {
    if (exit === void 0) { exit = true; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    tnp_models_1.PROGRESS_DATA.log({ msg: 'esangular and navi repo', value: 25 });
                    return [4 /*yield*/, autoupdate_backend_1.Autoupdate.Instance.start()];
                case 1:
                    _a.sent();
                    tnp_models_1.PROGRESS_DATA.log({ msg: 'navi-cli extension', value: 50 });
                    VSCODE_backend_1.VSCODE_EXT(args, false);
                    process.exit(0);
                    return [2 /*return*/];
            }
        });
    });
}
exports.AUTOUPDATE = AUTOUPDATE;
function AUTOUPDATE_FORCE() {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, autoupdate_backend_1.Autoupdate.Instance.start()];
                case 1:
                    _a.sent();
                    process.exit(0);
                    return [2 /*return*/];
            }
        });
    });
}
exports.AUTOUPDATE_FORCE = AUTOUPDATE_FORCE;
function FORCE_AUTOUPDATE() {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, autoupdate_backend_1.Autoupdate.Instance.start()];
                case 1:
                    _a.sent();
                    process.exit(0);
                    return [2 /*return*/];
            }
        });
    });
}
exports.FORCE_AUTOUPDATE = FORCE_AUTOUPDATE;
function GET_LOCATION() {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            console.log(navi_cli_1.NaviCli.Instance.location);
            process.exit(0);
            return [2 /*return*/];
        });
    });
}
exports.GET_LOCATION = GET_LOCATION;
exports.default = {
    AUTOUPDATE: AUTOUPDATE,
    AUTOUPDATE_FORCE: AUTOUPDATE_FORCE,
    FORCE_AUTOUPDATE: FORCE_AUTOUPDATE,
    GET_LOCATION: GET_LOCATION
};
//# sourceMappingURL=AUTOUPDATE.backend.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RELINK = exports.LINK = void 0;
var tslib_1 = require("tslib");
var tnp_core_1 = require("tnp-core");
var project_backend_1 = require("../project.backend");
var tnp_helpers_1 = require("tnp-helpers");
var tools_backend_1 = require("../tools.backend");
function LINK(projects, exit, relink) {
    if (projects === void 0) { projects = []; }
    if (exit === void 0) { exit = true; }
    if (relink === void 0) { relink = false; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var index, c, e_1;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (tnp_core_1._.isString(projects)) {
                        projects = [projects.trim()];
                    }
                    if (projects.length === 0) {
                        tnp_helpers_1.Helpers.error("Please provide name of module to link: " + tools_backend_1.Tools.ModulesForDecorationArr.join(', ') + ".", false, true);
                    }
                    index = 0;
                    _a.label = 1;
                case 1:
                    if (!(index < projects.length)) return [3 /*break*/, 6];
                    c = projects[index];
                    _a.label = 2;
                case 2:
                    _a.trys.push([2, 4, , 5]);
                    return [4 /*yield*/, project_backend_1.Project.Current.submodules.link(c, relink ? 'link' : 'clone-override')];
                case 3:
                    _a.sent();
                    return [3 /*break*/, 5];
                case 4:
                    e_1 = _a.sent();
                    tnp_helpers_1.Helpers.log(e_1);
                    tnp_helpers_1.Helpers.error("Cannot link submodule: " + c);
                    return [3 /*break*/, 5];
                case 5:
                    index++;
                    return [3 /*break*/, 1];
                case 6: return [4 /*yield*/, project_backend_1.Project.Current.vscode.update()];
                case 7:
                    _a.sent();
                    if (exit) {
                        process.exit(0);
                    }
                    return [2 /*return*/];
            }
        });
    });
}
exports.LINK = LINK;
function RELINK(projects, exit) {
    if (exit === void 0) { exit = true; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!!project_backend_1.Project.Current && project_backend_1.Project.Current.projectType === 'baseline-fork' && (!tnp_core_1._.isArray(projects) || projects.length == 0)) {
                        projects = project_backend_1.Project.Current.children.map(function (c) { return c.name; });
                    }
                    if (!tnp_core_1._.isArray(projects)) {
                        tnp_helpers_1.Helpers.error("You can only relink modules: " + tools_backend_1.Tools.ModulesForDecorationArr.join(', ') + " to vendor or node_modules of baseline-fork.");
                    }
                    return [4 /*yield*/, LINK(projects, exit, true)];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}
exports.RELINK = RELINK;
exports.default = {
    LINK: LINK,
    RELINK: RELINK
};
//# sourceMappingURL=LINK.backend.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.STARTOVER = exports.RESET = void 0;
var tslib_1 = require("tslib");
var project_backend_1 = require("../project.backend");
var _ = require("lodash");
var tnp_helpers_1 = require("tnp-helpers");
var chalk_1 = require("chalk");
function RESET(projectLocation, exit) {
    if (exit === void 0) { exit = true; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var project, childrentMsg, res;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!_.isString(projectLocation) || projectLocation.trim() === '') {
                        projectLocation = process.cwd();
                    }
                    project = project_backend_1.Project.From(projectLocation);
                    childrentMsg = (_.isArray(project.children) && project.children.length > 0) ?
                        "- external moduels:\n" + project.children.map(function (c) { return c.folderName + " (" + chalk_1.default.yellow(c.name) + ")"; }).join('\n') : '';
                    return [4 /*yield*/, tnp_helpers_1.Helpers.questionYesNo("Are you sure you wanna reset hard and pull latest changes for:\n- curret project (" + project.name + ")\n" + childrentMsg + "\n")];
                case 1:
                    res = _a.sent();
                    if (!res) return [3 /*break*/, 3];
                    return [4 /*yield*/, project.resetProcess()];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    if (exit) {
                        process.exit(0);
                    }
                    return [2 /*return*/];
            }
        });
    });
}
exports.RESET = RESET;
function STARTOVER(projectLocation, exit) {
    if (exit === void 0) { exit = true; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var project, res;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!_.isString(projectLocation) || projectLocation.trim() === '') {
                        projectLocation = process.cwd();
                    }
                    project = project_backend_1.Project.From(projectLocation);
                    return [4 /*yield*/, tnp_helpers_1.Helpers.questionYesNo("Are you sure you wanna clean node_modules and startover project " + project.name + " ?")];
                case 1:
                    res = _a.sent();
                    if (!res) return [3 /*break*/, 3];
                    return [4 /*yield*/, project.cleanStart()];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    if (exit) {
                        process.exit(0);
                    }
                    return [2 /*return*/];
            }
        });
    });
}
exports.STARTOVER = STARTOVER;
exports.default = {
    RESET: RESET,
    STARTOVER: STARTOVER
};
//# sourceMappingURL=RESET.backend.js.map
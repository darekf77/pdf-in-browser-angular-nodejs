"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SHOW_NAME_BASELINE_FORK = exports.SHOW_DB_PROJECTS = void 0;
var tslib_1 = require("tslib");
var _ = require("lodash");
var path = require("path");
var project_backend_1 = require("../project.backend");
var tnp_helpers_1 = require("tnp-helpers");
function SHOW_DB_PROJECTS() {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var projects;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, project_backend_1.Project.db.getAll()];
                case 1:
                    projects = _a.sent();
                    console.log(projects.map(function (p) {
                        return p.location + " " + p.type;
                    }));
                    process.exit(0);
                    return [2 /*return*/];
            }
        });
    });
}
exports.SHOW_DB_PROJECTS = SHOW_DB_PROJECTS;
function SHOW_NAME_BASELINE_FORK(args) {
    var relative = _.first(args);
    var project = project_backend_1.Project.nearestTo(path.join(process.cwd(), _.isString(relative) ? relative : ''));
    if (project.projectType !== 'child-module') {
        tnp_helpers_1.Helpers.error("This is not child module", false, true);
    }
    tnp_helpers_1.Helpers.outputToVScode(project.parent.name);
    process.exit(0);
}
exports.SHOW_NAME_BASELINE_FORK = SHOW_NAME_BASELINE_FORK;
var ProjectdbgetAll = function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
    var _a, _b;
    return tslib_1.__generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                _b = (_a = console).log;
                return [4 /*yield*/, project_backend_1.Project.db.getAll()];
            case 1:
                _b.apply(_a, [_c.sent()]);
                process.exit(0);
                return [2 /*return*/];
        }
    });
}); };
exports.default = {
    ProjectdbgetAll: ProjectdbgetAll,
    SHOW_DB_PROJECTS: SHOW_DB_PROJECTS,
    SHOW_NAME_BASELINE_FORK: SHOW_NAME_BASELINE_FORK
};
//# sourceMappingURL=SHOW.backend.js.map
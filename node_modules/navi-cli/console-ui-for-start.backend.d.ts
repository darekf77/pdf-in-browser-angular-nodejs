import { BaseConsoleUi } from './abstract/base-console-ui.backend';
import { Project } from './project.backend';
import { Tools } from './tools.backend';
import { Scenario } from 'record-replay-req-res-scenario';
import { RecorderConfigMeta } from 'record-replay-req-res-scenario';
export declare class ConsoleUIForStart extends BaseConsoleUi {
    private static _instance;
    private constructor();
    static get Instance(): ConsoleUIForStart;
    menuSelectAction(): Promise<Tools.MainMenuAction>;
    menuChooseLastDefault(project: Project, servers: Tools.CurrentServers, action: Tools.MainMenuAction): Promise<Tools.MainMenu>;
    menuReplay(project: Project, servers: Tools.CurrentServers): Promise<Tools.MainMenu>;
    menuRecord(project: Project, servers: Tools.CurrentServers): Promise<Tools.MainMenu>;
    chooseServers(pProject: Project, pCurrentServers: Tools.CurrentServers, action: Tools.MainMenuAction): Promise<Tools.ServerWitHostName>;
    resolveScenarioData(project: Project): Promise<void>;
    private getServers;
    getRecordConfig(serversFroRecording: Tools.ServerWitHostName): Promise<RecorderConfigMeta>;
    replayScenario(scenario: Scenario, project: Project): Promise<void>;
    init(project: Project, pAction?: Tools.MainMenuAction, act?: keyof Tools.CurrentServers, args?: string): Promise<void>;
}
